###############################################################################
#
# IAR C/C++ Compiler V10.10.1.4655 for 8051               16/Feb/2018  22:13:16
# Copyright 2004-2017 IAR Systems AB.
# Evaluation license - IAR Embedded Workbench for 8051, Evaluation version 10.10
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Components\stack\sys\ZDiags.c
#    Command line       =  
#        -f C:\Users\Oskar\AppData\Local\Temp\EW77F4.tmp ("C:\Texas
#        Instruments\Z-Stack Home 1.2.2a.44539\Components\stack\sys\ZDiags.c"
#        -D FEATURE_SYSTEM_STATS -D CC2531ZNP -D POWER_SAVING -D ASSERT_RESET
#        -D FAKE_CRC_SHDW -D xTC_LINKKEY_JOIN -lC "C:\Texas Instruments\Z-Stack
#        Home 1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-ProdHex\List" -lA
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-ProdHex\List"
#        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-ProdHex\Obj" -e --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 16 -f "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\Source\znp.cfg"
#        (-DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        "-DZSTACK_DEVICE_BUILD=(DEVICE_BUILD_COORDINATOR | DEVICE_BUILD_ROUTER
#        | DEVICE_BUILD_ENDDEVICE)" -DNWK_AUTO_POLL -DZNP_RUN_WDOG=FALSE
#        -DZNP_UART_BAUD=HAL_UART_BR_115200 -DZIGBEEPRO -DZIGBEE_FRAGMENTATION
#        -DINTER_PAN -DOSAL_CLOCK -DOSAL_SAPI=FALSE -DSAPI_CB_FUNC=FALSE
#        -DHOLD_AUTO_START -DNV_RESTORE -DNV_INIT -DNUM_DISC_ATTEMPTS=0
#        -DTC_LINKKEY_JOIN -DMT_UTIL_FUNC -DMT_SYS_FUNC -DMT_AF_FUNC
#        -DMT_SAPI_FUNC -DMT_SAPI_CB_FUNC -DMT_ZDO_CB_FUNC -DMT_ZDO_FUNC
#        -DMT_ZDO_MGMT -DMT_ZDO_EXTENSIONS -DMT_APP_FUNC) -f "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
#        -f "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\SE\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\Utilities\BootLoad\Source\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\ZMain\TI2530ZNP\" -I
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530USB\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530USB\usb\library\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530USB\usb\library\cc2531\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530USB\usb\class_cdc\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\high_level\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mt\" -I
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\osal\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\ecc\binary163\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\ecc\binary283\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\saddr\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\sdata\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\af\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\nwk\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sapi\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sec\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sys\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\zcl\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\zdo\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\zmac\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\zmac\f8w\"
#        -Ohz --require_prototypes --no_code_motion)
#    Locale             =  German_Germany.1252
#    List file          =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-ProdHex\List\ZDiags.lst
#    Object file        =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-ProdHex\Obj\ZDiags.r51
#
###############################################################################

C:\Texas Instruments\Z-Stack Home 1.2.2a.44539\Components\stack\sys\ZDiags.c
      1          /**************************************************************************************************
      2            Filename:       ZDiags.c
      3            Revised:        $Date: 2014-03-13 15:53:56 -0700 (Thu, 13 Mar 2014) $
      4            Revision:       $Revision: 37678 $
      5          
      6            Description:    Diagnostics module.
      7          
      8          
      9            Copyright 2014 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41           * INCLUDES
     42           */
     43          #include "OSAL.h"
     44          #include "OSAL_Nv.h"
     45          #include "OSAL_Timers.h"
     46          #include "ZDiags.h"
     47          #include "ZMAC.h"
     48          
     49          /*********************************************************************
     50           * MACROS
     51           */
     52          
     53          /*********************************************************************
     54           * CONSTANTS
     55           */
     56          
     57          /*********************************************************************
     58           * TYPEDEFS
     59           */
     60          
     61          /*********************************************************************
     62           * GLOBAL VARIABLES
     63           */
     64          #if defined ( FEATURE_SYSTEM_STATS )

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     65          static DiagStatistics_t DiagsStatsTable;
   \                     DiagsStatsTable:
   \   000000                DS 84
   \   000054                REQUIRE __INIT_XDATA_Z
     66          #endif
     67          
     68          /*********************************************************************
     69           * LOCAL VARIABLES
     70           */
     71          
     72          /*********************************************************************
     73           * LOCAL FUNCTIONS
     74           */
     75          
     76          
     77          /****************************************************************************
     78           * @fn          ZDiagsInitStats
     79           *
     80           * @brief       Initialize the statistics table in NV or restore values from
     81           *              NV into the Statistics table in RAM
     82           *
     83           * @param       none.
     84           *
     85           * @return      ZSuccess - if NV data was initialized successfully.
     86           *              ZFailure - Otherwise
     87           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     88          uint8 ZDiagsInitStats( void )
   \                     ZDiagsInitStats:
     89          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     90            uint8 retValue = ZSuccess;
   \   000005   7E00         MOV       R6,#0x0
     91          
     92          #if defined ( FEATURE_SYSTEM_STATS )
     93            uint8 status;
     94          
     95            // Initialize structure with default values, and do not try to write to NV
     96            // because item does not exist yet
     97            (void)ZDiagsClearStats( FALSE );
   \   000007                ; Setup parameters for call to function ZDiagsClearStats
   \   000007   7900         MOV       R1,#0x0
   \   000009   12....       LCALL     `??ZDiagsClearStats::?relay`; Banked call to: ZDiagsClearStats
     98          
     99            status = osal_nv_item_init( ZCD_NV_DIAGNOSTIC_STATS,
    100                                        (uint16)sizeof( DiagStatistics_t ),
    101                                        &DiagsStatsTable );
   \   00000C                ; Setup parameters for call to function osal_nv_item_init
   \   00000C   75....       MOV       ?V0,#DiagsStatsTable & 0xff
   \   00000F   75....       MOV       ?V1,#(DiagsStatsTable >> 8) & 0xff
   \   000012   78..         MOV       R0,#?V0
   \   000014   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000017   7C54         MOV       R4,#0x54
   \   000019   7D00         MOV       R5,#0x0
   \   00001B   7A50         MOV       R2,#0x50
   \   00001D   7B00         MOV       R3,#0x0
   \   00001F   12....       LCALL     `??osal_nv_item_init::?relay`; Banked call to: osal_nv_item_init
   \   000022   7402         MOV       A,#0x2
   \   000024   12....       LCALL     ?DEALLOC_XSTACK8
   \   000027   E9           MOV       A,R1
   \   000028   F8           MOV       R0,A
    102          
    103            if ( status == NV_OPER_FAILED )
   \   000029   740A         MOV       A,#0xa
   \   00002B   68           XRL       A,R0
   \   00002C   600B         JZ        ??ZDiagsInitStats_0
    104            {
    105              retValue = ZFailure;
    106            }
    107            else
    108            {
    109              // Item existed, restore NV values into RAM table
    110              if ( status == SUCCESS )
   \   00002E   E8           MOV       A,R0
   \   00002F   700A         JNZ       ??ZDiagsInitStats_1
    111              {
    112                if ( NV_OPER_FAILED == ZDiagsRestoreStatsFromNV() )
   \   000031                ; Setup parameters for call to function ZDiagsRestoreStatsFromNV
   \   000031   12....       LCALL     `??ZDiagsRestoreStatsFromNV::?relay`; Banked call to: ZDiagsRestoreStatsFromNV
   \   000034   E9           MOV       A,R1
   \   000035   640A         XRL       A,#0xa
   \   000037   7002         JNZ       ??ZDiagsInitStats_1
    113                {
    114                  retValue = ZFailure;
   \                     ??ZDiagsInitStats_0:
   \   000039   7E01         MOV       R6,#0x1
    115                }
    116              }
    117            }
    118          #endif // FEATURE_SYSTEM_STATS
    119          
    120            return ( retValue );
   \                     ??ZDiagsInitStats_1:
   \   00003B   02....       LJMP      ?Subroutine0 & 0xFFFF
    121          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   EE           MOV       A,R6
   \   000001   F9           MOV       R1,A
   \   000002                REQUIRE ??Subroutine2_0
   \   000002                ; // Fall through to label ??Subroutine2_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine2_0:
   \   000000   7F02         MOV       R7,#0x2
   \   000002   02....       LJMP      ?BANKED_LEAVE_XDATA
    122          
    123          /****************************************************************************
    124           * @fn          ZDiagsClearStats
    125           *
    126           * @brief       Clears the statistics table in RAM and NV if option flag set.
    127           *
    128           * @param       clearNV   - Option flag to clear NV data.
    129           *
    130           * @return      System Clock.
    131           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    132          uint32 ZDiagsClearStats( bool clearNV )
   \                     ZDiagsClearStats:
    133          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000   74F2         MOV       A,#-0xe
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV       A,#-0x2
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   E9           MOV       A,R1
   \   00000B   FE           MOV       R6,A
    134            uint32 retValue = 0;
    135          
    136          #if defined ( FEATURE_SYSTEM_STATS )
    137            // clears statistics table
    138            osal_memset( &DiagsStatsTable, 0, sizeof( DiagStatistics_t ) );
   \   00000C                ; Setup parameters for call to function osal_memset
   \   00000C   7C54         MOV       R4,#0x54
   \   00000E   7D00         MOV       R5,#0x0
   \   000010   7900         MOV       R1,#0x0
   \   000012   7A..         MOV       R2,#DiagsStatsTable & 0xff
   \   000014   7B..         MOV       R3,#(DiagsStatsTable >> 8) & 0xff
   \   000016   12....       LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
    139          
    140            // saves System Clock when statistics were cleared
    141            retValue = DiagsStatsTable.SysClock = osal_GetSystemClock();
   \   000019                ; Setup parameters for call to function osal_GetSystemClock
   \   000019   12....       LCALL     `??osal_GetSystemClock::?relay`; Banked call to: osal_GetSystemClock
   \   00001C   8A..         MOV       ?V0,R2
   \   00001E   8B..         MOV       ?V1,R3
   \   000020   8C..         MOV       ?V2,R4
   \   000022   8D..         MOV       ?V3,R5
   \   000024   90....       MOV       DPTR,#DiagsStatsTable
   \   000027   78..         MOV       R0,#?V0
   \   000029   12....       LCALL     ?L_MOV_TO_X
    142          
    143            if ( clearNV )
   \   00002C   EE           MOV       A,R6
   \   00002D   6058         JZ        ??ZDiagsClearStats_0
    144            {
    145              uint16 bootCnt = 0;
   \   00002F   85..82       MOV       DPL,?XSP + 0
   \   000032   85..83       MOV       DPH,?XSP + 1
   \   000035   E4           CLR       A
   \   000036   F0           MOVX      @DPTR,A
   \   000037   A3           INC       DPTR
   \   000038   F0           MOVX      @DPTR,A
    146          
    147              // Boot count is not part of DiagsStatsTable, it has to be initialized separately
    148              osal_nv_write( ZCD_NV_BOOTCOUNTER, 0, sizeof(bootCnt), &bootCnt );
   \   000039                ; Setup parameters for call to function osal_nv_write
   \   000039   A8..         MOV       R0,?XSP + 0
   \   00003B   A9..         MOV       R1,?XSP + 1
   \   00003D   88..         MOV       ?V4,R0
   \   00003F   89..         MOV       ?V5,R1
   \   000041   78..         MOV       R0,#?V4
   \   000043   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000046   75..02       MOV       ?V4,#0x2
   \   000049   75..00       MOV       ?V5,#0x0
   \   00004C   78..         MOV       R0,#?V4
   \   00004E   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000051   7C00         MOV       R4,#0x0
   \   000053   7D00         MOV       R5,#0x0
   \   000055   7A02         MOV       R2,#0x2
   \   000057   7B00         MOV       R3,#0x0
   \   000059   12....       LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
   \   00005C   7404         MOV       A,#0x4
   \   00005E   12....       LCALL     ?DEALLOC_XSTACK8
    149          
    150              // Clears values in NV and saves the system clock for the last time stats were cleared
    151              osal_nv_write( ZCD_NV_DIAGNOSTIC_STATS, 0, sizeof( DiagStatistics_t ), &DiagsStatsTable );
   \   000061                ; Setup parameters for call to function osal_nv_write
   \   000061   75....       MOV       ?V4,#DiagsStatsTable & 0xff
   \   000064   75....       MOV       ?V5,#(DiagsStatsTable >> 8) & 0xff
   \   000067   78..         MOV       R0,#?V4
   \   000069   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00006C   75..54       MOV       ?V4,#0x54
   \   00006F   75..00       MOV       ?V5,#0x0
   \   000072   78..         MOV       R0,#?V4
   \   000074   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000077   7C00         MOV       R4,#0x0
   \   000079   7D00         MOV       R5,#0x0
   \   00007B   7A50         MOV       R2,#0x50
   \   00007D   7B00         MOV       R3,#0x0
   \   00007F   12....       LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
   \   000082   7404         MOV       A,#0x4
   \   000084   12....       LCALL     ?DEALLOC_XSTACK8
    152            }
    153          #endif // FEATURE_SYSTEM_STATS
    154          
    155            return ( retValue );
   \                     ??ZDiagsClearStats_0:
   \   000087   AA..         MOV       R2,?V0
   \   000089   AB..         MOV       R3,?V1
   \   00008B   AC..         MOV       R4,?V2
   \   00008D   AD..         MOV       R5,?V3
   \   00008F   7402         MOV       A,#0x2
   \   000091   12....       LCALL     ?DEALLOC_XSTACK8
   \   000094                REQUIRE ?Subroutine1
   \   000094                ; // Fall through to label ?Subroutine1
    156          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F06         MOV       R7,#0x6
   \   000002   02....       LJMP      ?BANKED_LEAVE_XDATA
    157          
    158          /****************************************************************************
    159           * @fn          ZDiagsUpdateStats
    160           *
    161           * @brief       Update statistics and/or metrics for a specific Attribute Id
    162           *
    163           * @param       attributeId  input  - unique identifier for the required attribute
    164           *
    165           * @return      none.
    166           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    167          void ZDiagsUpdateStats( uint16 attributeId )
   \                     ZDiagsUpdateStats:
    168          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    169          #if defined ( FEATURE_SYSTEM_STATS )
    170            switch ( attributeId )
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
   \   000009   78..         MOV       R0,#?V0
   \   00000B   12....       LCALL     ?US_SWITCH_SPARSE
   \                     `?<Jumptable for ZDiagsUpdateStats>_0`:
   \   00000E   0000         DW        0
   \   000010   1900         DW        25
   \   000012   0000         DW        0
   \   000014   ....         DW        ??ZDiagsUpdateStats_0
   \   000016   0200         DW        2
   \   000018   ....         DW        ??ZDiagsUpdateStats_1
   \   00001A   C800         DW        200
   \   00001C   ....         DW        ??ZDiagsUpdateStats_2
   \   00001E   C900         DW        201
   \   000020   ....         DW        ??ZDiagsUpdateStats_3
   \   000022   CA00         DW        202
   \   000024   ....         DW        ??ZDiagsUpdateStats_4
   \   000026   CB00         DW        203
   \   000028   ....         DW        ??ZDiagsUpdateStats_5
   \   00002A   CC00         DW        204
   \   00002C   ....         DW        ??ZDiagsUpdateStats_6
   \   00002E   CD00         DW        205
   \   000030   ....         DW        ??ZDiagsUpdateStats_7
   \   000032   CE00         DW        206
   \   000034   ....         DW        ??ZDiagsUpdateStats_8
   \   000036   CF00         DW        207
   \   000038   ....         DW        ??ZDiagsUpdateStats_9
   \   00003A   D000         DW        208
   \   00003C   ....         DW        ??ZDiagsUpdateStats_10
   \   00003E   D100         DW        209
   \   000040   ....         DW        ??ZDiagsUpdateStats_11
   \   000042   D200         DW        210
   \   000044   ....         DW        ??ZDiagsUpdateStats_12
   \   000046   D300         DW        211
   \   000048   ....         DW        ??ZDiagsUpdateStats_13
   \   00004A   2C01         DW        300
   \   00004C   ....         DW        ??ZDiagsUpdateStats_14
   \   00004E   2D01         DW        301
   \   000050   ....         DW        ??ZDiagsUpdateStats_15
   \   000052   2E01         DW        302
   \   000054   ....         DW        ??ZDiagsUpdateStats_16
   \   000056   2F01         DW        303
   \   000058   ....         DW        ??ZDiagsUpdateStats_17
   \   00005A   3001         DW        304
   \   00005C   ....         DW        ??ZDiagsUpdateStats_18
   \   00005E   3101         DW        305
   \   000060   ....         DW        ??ZDiagsUpdateStats_19
   \   000062   3201         DW        306
   \   000064   ....         DW        ??ZDiagsUpdateStats_20
   \   000066   3301         DW        307
   \   000068   ....         DW        ??ZDiagsUpdateStats_21
   \   00006A   3401         DW        308
   \   00006C   ....         DW        ??ZDiagsUpdateStats_22
   \   00006E   3501         DW        309
   \   000070   ....         DW        ??ZDiagsUpdateStats_23
   \   000072   3601         DW        310
   \   000074   ....         DW        ??ZDiagsUpdateStats_24
   \   000076   ....         DW        ??ZDiagsUpdateStats_25
    171            {
    172              // System and Hardware Diagnostics
    173              case ZDIAGS_SYSTEM_CLOCK:
    174                DiagsStatsTable.SysClock = osal_GetSystemClock();
   \                     ??ZDiagsUpdateStats_0:
   \   000078                ; Setup parameters for call to function osal_GetSystemClock
   \   000078   12....       LCALL     `??osal_GetSystemClock::?relay`; Banked call to: osal_GetSystemClock
   \   00007B   90....       MOV       DPTR,#DiagsStatsTable
   \   00007E   12....       LCALL     ?XSTORE_R2345
    175                break;
   \   000081   807F         SJMP      ??ZDiagsUpdateStats_25
    176          
    177              case ZDIAGS_PERSISTENT_MEMORY_WRITES:
    178                DiagsStatsTable.PersistentMemoryWrites++;
   \                     ??ZDiagsUpdateStats_1:
   \   000083   90....       MOV       DPTR,#DiagsStatsTable + 4
   \   000086   8071         SJMP      ??ZDiagsUpdateStats_26
    179                break;
    180          
    181              // NWK Diagnostics
    182              case ZDIAGS_ROUTE_DISC_INITIATED:
    183                DiagsStatsTable.RouteDiscInitiated++;
   \                     ??ZDiagsUpdateStats_2:
   \   000088   90....       MOV       DPTR,#DiagsStatsTable + 38
   \   00008B   806C         SJMP      ??ZDiagsUpdateStats_26
    184                break;
    185          
    186              case ZDIAGS_NEIGHBOR_ADDED:
    187                DiagsStatsTable.NeighborAdded++;
   \                     ??ZDiagsUpdateStats_3:
   \   00008D   90....       MOV       DPTR,#DiagsStatsTable + 40
   \   000090   8067         SJMP      ??ZDiagsUpdateStats_26
    188                break;
    189          
    190              case ZDIAGS_NEIGHBOR_REMOVED:
    191                DiagsStatsTable.NeighborRemoved++;
   \                     ??ZDiagsUpdateStats_4:
   \   000092   90....       MOV       DPTR,#DiagsStatsTable + 42
   \   000095   8062         SJMP      ??ZDiagsUpdateStats_26
    192                break;
    193          
    194              case ZDIAGS_NEIGHBOR_STALE:
    195                DiagsStatsTable.NeighborStale++;
   \                     ??ZDiagsUpdateStats_5:
   \   000097   90....       MOV       DPTR,#DiagsStatsTable + 44
   \   00009A   805D         SJMP      ??ZDiagsUpdateStats_26
    196                break;
    197          
    198              case ZDIAGS_JOIN_INDICATION:
    199                DiagsStatsTable.JoinIndication++;
   \                     ??ZDiagsUpdateStats_6:
   \   00009C   90....       MOV       DPTR,#DiagsStatsTable + 46
   \   00009F   8058         SJMP      ??ZDiagsUpdateStats_26
    200                break;
    201          
    202              case ZDIAGS_CHILD_MOVED:
    203                DiagsStatsTable.ChildMoved++;
   \                     ??ZDiagsUpdateStats_7:
   \   0000A1   90....       MOV       DPTR,#DiagsStatsTable + 48
   \   0000A4   8053         SJMP      ??ZDiagsUpdateStats_26
    204                break;
    205          
    206              case ZDIAGS_NWK_FC_FAILURE:
    207                DiagsStatsTable.NwkFcFailure++;
   \                     ??ZDiagsUpdateStats_8:
   \   0000A6   90....       MOV       DPTR,#DiagsStatsTable + 50
   \   0000A9   804E         SJMP      ??ZDiagsUpdateStats_26
    208                break;
    209          
    210              case ZDIAGS_NWK_DECRYPT_FAILURES:
    211                DiagsStatsTable.NwkDecryptFailures++;
   \                     ??ZDiagsUpdateStats_9:
   \   0000AB   90....       MOV       DPTR,#DiagsStatsTable + 52
   \   0000AE   8049         SJMP      ??ZDiagsUpdateStats_26
    212                break;
    213          
    214              case ZDIAGS_PACKET_BUFFER_ALLOCATE_FAILURES:
    215                DiagsStatsTable.PacketBufferAllocateFailures++;
   \                     ??ZDiagsUpdateStats_10:
   \   0000B0   90....       MOV       DPTR,#DiagsStatsTable + 54
   \   0000B3   8044         SJMP      ??ZDiagsUpdateStats_26
    216                break;
    217          
    218              case ZDIAGS_RELAYED_UCAST:
    219                DiagsStatsTable.RelayedUcast++;
   \                     ??ZDiagsUpdateStats_11:
   \   0000B5   90....       MOV       DPTR,#DiagsStatsTable + 56
   \   0000B8   803F         SJMP      ??ZDiagsUpdateStats_26
    220                break;
    221          
    222              case ZDIAGS_PHY_TO_MAC_QUEUE_LIMIT_REACHED:
    223                DiagsStatsTable.PhyToMacQueueLimitReached++;
   \                     ??ZDiagsUpdateStats_12:
   \   0000BA   90....       MOV       DPTR,#DiagsStatsTable + 58
   \   0000BD   803A         SJMP      ??ZDiagsUpdateStats_26
    224                break;
    225          
    226              case ZDIAGS_PACKET_VALIDATE_DROP_COUNT:
    227                DiagsStatsTable.PacketValidateDropCount++;
   \                     ??ZDiagsUpdateStats_13:
   \   0000BF   90....       MOV       DPTR,#DiagsStatsTable + 60
   \   0000C2   8035         SJMP      ??ZDiagsUpdateStats_26
    228                break;
    229          
    230              // APS Diagnostics
    231              case ZDIAGS_APS_RX_BCAST:
    232                DiagsStatsTable.ApsRxBcast++;
   \                     ??ZDiagsUpdateStats_14:
   \   0000C4   90....       MOV       DPTR,#DiagsStatsTable + 62
   \   0000C7   8030         SJMP      ??ZDiagsUpdateStats_26
    233                break;
    234          
    235              case ZDIAGS_APS_TX_BCAST:
    236                DiagsStatsTable.ApsTxBcast++;
   \                     ??ZDiagsUpdateStats_15:
   \   0000C9   90....       MOV       DPTR,#DiagsStatsTable + 64
   \   0000CC   802B         SJMP      ??ZDiagsUpdateStats_26
    237                break;
    238          
    239              case ZDIAGS_APS_RX_UCAST:
    240                DiagsStatsTable.ApsRxUcast++;
   \                     ??ZDiagsUpdateStats_16:
   \   0000CE   90....       MOV       DPTR,#DiagsStatsTable + 66
   \   0000D1   8026         SJMP      ??ZDiagsUpdateStats_26
    241                break;
    242          
    243              case ZDIAGS_APS_TX_UCAST_SUCCESS:
    244                DiagsStatsTable.ApsTxUcastSuccess++;
   \                     ??ZDiagsUpdateStats_17:
   \   0000D3   90....       MOV       DPTR,#DiagsStatsTable + 68
   \   0000D6   8021         SJMP      ??ZDiagsUpdateStats_26
    245                break;
    246          
    247              case ZDIAGS_APS_TX_UCAST_RETRY:
    248                DiagsStatsTable.ApsTxUcastRetry++;
   \                     ??ZDiagsUpdateStats_18:
   \   0000D8   90....       MOV       DPTR,#DiagsStatsTable + 70
   \   0000DB   801C         SJMP      ??ZDiagsUpdateStats_26
    249                break;
    250          
    251              case ZDIAGS_APS_TX_UCAST_FAIL:
    252                DiagsStatsTable.ApsTxUcastFail++;
   \                     ??ZDiagsUpdateStats_19:
   \   0000DD   90....       MOV       DPTR,#DiagsStatsTable + 72
   \   0000E0   8017         SJMP      ??ZDiagsUpdateStats_26
    253                break;
    254          
    255              case ZDIAGS_APS_FC_FAILURE:
    256                DiagsStatsTable.ApsFcFailure++;
   \                     ??ZDiagsUpdateStats_20:
   \   0000E2   90....       MOV       DPTR,#DiagsStatsTable + 74
   \   0000E5   8012         SJMP      ??ZDiagsUpdateStats_26
    257                break;
    258          
    259              case ZDIAGS_APS_UNAUTHORIZED_KEY:
    260                DiagsStatsTable.ApsUnauthorizedKey++;
   \                     ??ZDiagsUpdateStats_21:
   \   0000E7   90....       MOV       DPTR,#DiagsStatsTable + 76
   \   0000EA   800D         SJMP      ??ZDiagsUpdateStats_26
    261                break;
    262          
    263              case ZDIAGS_APS_DECRYPT_FAILURES:
    264                DiagsStatsTable.ApsDecryptFailures++;
   \                     ??ZDiagsUpdateStats_22:
   \   0000EC   90....       MOV       DPTR,#DiagsStatsTable + 78
   \   0000EF   8008         SJMP      ??ZDiagsUpdateStats_26
    265                break;
    266          
    267              case ZDIAGS_APS_INVALID_PACKETS:
    268                DiagsStatsTable.ApsInvalidPackets++;
   \                     ??ZDiagsUpdateStats_23:
   \   0000F1   90....       MOV       DPTR,#DiagsStatsTable + 80
   \   0000F4   8003         SJMP      ??ZDiagsUpdateStats_26
    269                break;
    270          
    271              case ZDIAGS_MAC_RETRIES_PER_APS_TX_SUCCESS:
    272                DiagsStatsTable.MacRetriesPerApsTxSuccess++;
   \                     ??ZDiagsUpdateStats_24:
   \   0000F6   90....       MOV       DPTR,#DiagsStatsTable + 82
   \                     ??ZDiagsUpdateStats_26:
   \   0000F9   E0           MOVX      A,@DPTR
   \   0000FA   2401         ADD       A,#0x1
   \   0000FC   F0           MOVX      @DPTR,A
   \   0000FD   A3           INC       DPTR
   \   0000FE   E0           MOVX      A,@DPTR
   \   0000FF   3400         ADDC      A,#0x0
   \   000101   F0           MOVX      @DPTR,A
    273                break;
    274          
    275              default:
    276                break;
    277            }
    278          #endif // FEATURE_SYSTEM_STATS
    279          }
   \                     ??ZDiagsUpdateStats_25:
   \   000102   80..         SJMP      ??Subroutine2_0
    280          
    281          /****************************************************************************
    282           * @fn          ZDiagsGetStatsAttr
    283           *
    284           * @brief       Reads specific systemID statistics and/or metrics
    285           *
    286           * @param       attributeId  input  - unique identifier for the required attribute
    287           *
    288           *   NOTE: the user of this function will have to cast the value
    289           *         based on the type of the attributeID, the returned value
    290           *         will allways be uint32.
    291           *
    292           * @return      Value of the attribute requested.
    293           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    294          uint32 ZDiagsGetStatsAttr( uint16 attributeId )
   \                     ZDiagsGetStatsAttr:
    295          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV       A,#-0x4
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
    296            uint32 diagsValue = 0;
   \   00000A   85..82       MOV       DPL,?XSP + 0
   \   00000D   85..83       MOV       DPH,?XSP + 1
   \   000010   E4           CLR       A
   \   000011   F0           MOVX      @DPTR,A
   \   000012   A3           INC       DPTR
   \   000013   F0           MOVX      @DPTR,A
   \   000014   A3           INC       DPTR
   \   000015   F0           MOVX      @DPTR,A
   \   000016   A3           INC       DPTR
   \   000017   F0           MOVX      @DPTR,A
    297          
    298          #if defined ( FEATURE_SYSTEM_STATS )
    299            switch ( attributeId )
   \   000018   8A..         MOV       ?V0,R2
   \   00001A   8B..         MOV       ?V1,R3
   \   00001C   78..         MOV       R0,#?V0
   \   00001E   12....       LCALL     ?US_SWITCH_SPARSE
   \                     `?<Jumptable for ZDiagsGetStatsAttr>_0`:
   \   000021   0000         DW        0
   \   000023   2200         DW        34
   \   000025   0000         DW        0
   \   000027   ....         DW        ??ZDiagsGetStatsAttr_0
   \   000029   0100         DW        1
   \   00002B   ....         DW        ??ZDiagsGetStatsAttr_1
   \   00002D   0200         DW        2
   \   00002F   ....         DW        ??ZDiagsGetStatsAttr_2
   \   000031   6400         DW        100
   \   000033   ....         DW        ??ZDiagsGetStatsAttr_3
   \   000035   6500         DW        101
   \   000037   ....         DW        ??ZDiagsGetStatsAttr_4
   \   000039   6600         DW        102
   \   00003B   ....         DW        ??ZDiagsGetStatsAttr_5
   \   00003D   6700         DW        103
   \   00003F   ....         DW        ??ZDiagsGetStatsAttr_6
   \   000041   6800         DW        104
   \   000043   ....         DW        ??ZDiagsGetStatsAttr_7
   \   000045   6900         DW        105
   \   000047   ....         DW        ??ZDiagsGetStatsAttr_8
   \   000049   6A00         DW        106
   \   00004B   ....         DW        ??ZDiagsGetStatsAttr_9
   \   00004D   6B00         DW        107
   \   00004F   ....         DW        ??ZDiagsGetStatsAttr_10
   \   000051   C800         DW        200
   \   000053   ....         DW        ??ZDiagsGetStatsAttr_11
   \   000055   C900         DW        201
   \   000057   ....         DW        ??ZDiagsGetStatsAttr_12
   \   000059   CA00         DW        202
   \   00005B   ....         DW        ??ZDiagsGetStatsAttr_13
   \   00005D   CB00         DW        203
   \   00005F   ....         DW        ??ZDiagsGetStatsAttr_14
   \   000061   CC00         DW        204
   \   000063   ....         DW        ??ZDiagsGetStatsAttr_15
   \   000065   CD00         DW        205
   \   000067   ....         DW        ??ZDiagsGetStatsAttr_16
   \   000069   CE00         DW        206
   \   00006B   ....         DW        ??ZDiagsGetStatsAttr_17
   \   00006D   CF00         DW        207
   \   00006F   ....         DW        ??ZDiagsGetStatsAttr_18
   \   000071   D000         DW        208
   \   000073   ....         DW        ??ZDiagsGetStatsAttr_19
   \   000075   D100         DW        209
   \   000077   ....         DW        ??ZDiagsGetStatsAttr_20
   \   000079   D200         DW        210
   \   00007B   ....         DW        ??ZDiagsGetStatsAttr_21
   \   00007D   D300         DW        211
   \   00007F   ....         DW        ??ZDiagsGetStatsAttr_22
   \   000081   2C01         DW        300
   \   000083   ....         DW        ??ZDiagsGetStatsAttr_23
   \   000085   2D01         DW        301
   \   000087   ....         DW        ??ZDiagsGetStatsAttr_24
   \   000089   2E01         DW        302
   \   00008B   ....         DW        ??ZDiagsGetStatsAttr_25
   \   00008D   2F01         DW        303
   \   00008F   ....         DW        ??ZDiagsGetStatsAttr_26
   \   000091   3001         DW        304
   \   000093   ....         DW        ??ZDiagsGetStatsAttr_27
   \   000095   3101         DW        305
   \   000097   ....         DW        ??ZDiagsGetStatsAttr_28
   \   000099   3201         DW        306
   \   00009B   ....         DW        ??ZDiagsGetStatsAttr_29
   \   00009D   3301         DW        307
   \   00009F   ....         DW        ??ZDiagsGetStatsAttr_30
   \   0000A1   3401         DW        308
   \   0000A3   ....         DW        ??ZDiagsGetStatsAttr_31
   \   0000A5   3501         DW        309
   \   0000A7   ....         DW        ??ZDiagsGetStatsAttr_32
   \   0000A9   3601         DW        310
   \   0000AB   ....         DW        ??ZDiagsGetStatsAttr_33
   \   0000AD   ....         DW        ??ZDiagsGetStatsAttr_34
    300            {
    301              // System and Hardware Diagnostics
    302              case ZDIAGS_SYSTEM_CLOCK:
    303                // this is the system clock when statistics were cleared;
    304                diagsValue = DiagsStatsTable.SysClock;
   \                     ??ZDiagsGetStatsAttr_0:
   \   0000AF   90....       MOV       DPTR,#DiagsStatsTable
   \   0000B2   12....       LCALL     ?XLOAD_R0123
   \   0000B5   85..82       MOV       DPL,?XSP + 0
   \   0000B8   85..83       MOV       DPH,?XSP + 1
   \   0000BB   02....       LJMP      ??ZDiagsGetStatsAttr_35 & 0xFFFF
    305                break;
    306          
    307              case ZDIAGS_NUMBER_OF_RESETS:
    308                // Get the value from NV memory
    309                osal_nv_read( ZCD_NV_BOOTCOUNTER, 0, sizeof(uint16), &diagsValue );
   \                     ??ZDiagsGetStatsAttr_1:
   \   0000BE                ; Setup parameters for call to function osal_nv_read
   \   0000BE   A8..         MOV       R0,?XSP + 0
   \   0000C0   A9..         MOV       R1,?XSP + 1
   \   0000C2   88..         MOV       ?V0,R0
   \   0000C4   89..         MOV       ?V1,R1
   \   0000C6   78..         MOV       R0,#?V0
   \   0000C8   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000CB   75..02       MOV       ?V0,#0x2
   \   0000CE   75..00       MOV       ?V1,#0x0
   \   0000D1   78..         MOV       R0,#?V0
   \   0000D3   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000D6   7C00         MOV       R4,#0x0
   \   0000D8   7D00         MOV       R5,#0x0
   \   0000DA   7A02         MOV       R2,#0x2
   \   0000DC   7B00         MOV       R3,#0x0
   \   0000DE   12....       LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
   \   0000E1   7404         MOV       A,#0x4
   \   0000E3   12....       LCALL     ?DEALLOC_XSTACK8
    310                break;
   \   0000E6   02....       LJMP      ??ZDiagsGetStatsAttr_34 & 0xFFFF
    311          
    312              case ZDIAGS_PERSISTENT_MEMORY_WRITES:
    313                diagsValue = DiagsStatsTable.PersistentMemoryWrites;
   \                     ??ZDiagsGetStatsAttr_2:
   \   0000E9   90....       MOV       DPTR,#DiagsStatsTable + 4
   \   0000EC   02....       LJMP      ??ZDiagsGetStatsAttr_36 & 0xFFFF
    314                break;
    315          
    316              // MAC Diagnostics
    317              case ZDIAGS_MAC_RX_CRC_PASS:
    318                ZMacGetReq( ZMacDiagsRxCrcPass, (uint8 *)&diagsValue );
   \                     ??ZDiagsGetStatsAttr_3:
   \   0000EF                ; Setup parameters for call to function ZMacGetReq
   \   0000EF   AA..         MOV       R2,?XSP + 0
   \   0000F1   AB..         MOV       R3,?XSP + 1
   \   0000F3   79E7         MOV       R1,#-0x19
   \   0000F5   12....       LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
    319                // Update the statistics table with this value from MAC
    320                DiagsStatsTable.MacRxCrcPass = diagsValue;
   \   0000F8   85..82       MOV       DPL,?XSP + 0
   \   0000FB   85..83       MOV       DPH,?XSP + 1
   \   0000FE   12....       LCALL     ?XLOAD_R0123
   \   000101   90....       MOV       DPTR,#DiagsStatsTable + 6
   \   000104   02....       LJMP      ??ZDiagsGetStatsAttr_35 & 0xFFFF
    321                break;
    322          
    323              case ZDIAGS_MAC_RX_CRC_FAIL:
    324                ZMacGetReq( ZMacDiagsRxCrcFail, (uint8 *)&diagsValue );
   \                     ??ZDiagsGetStatsAttr_4:
   \   000107                ; Setup parameters for call to function ZMacGetReq
   \   000107   AA..         MOV       R2,?XSP + 0
   \   000109   AB..         MOV       R3,?XSP + 1
   \   00010B   79E8         MOV       R1,#-0x18
   \   00010D   12....       LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
    325                // Update the statistics table with this value from MAC
    326                DiagsStatsTable.MacRxCrcFail = diagsValue;
   \   000110   85..82       MOV       DPL,?XSP + 0
   \   000113   85..83       MOV       DPH,?XSP + 1
   \   000116   12....       LCALL     ?XLOAD_R0123
   \   000119   90....       MOV       DPTR,#DiagsStatsTable + 10
   \   00011C   02....       LJMP      ??ZDiagsGetStatsAttr_35 & 0xFFFF
    327                break;
    328          
    329              case ZDIAGS_MAC_RX_BCAST:
    330                ZMacGetReq( ZMacDiagsRxBcast, (uint8 *)&diagsValue );
   \                     ??ZDiagsGetStatsAttr_5:
   \   00011F                ; Setup parameters for call to function ZMacGetReq
   \   00011F   AA..         MOV       R2,?XSP + 0
   \   000121   AB..         MOV       R3,?XSP + 1
   \   000123   79E9         MOV       R1,#-0x17
   \   000125   12....       LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
    331                // Update the statistics table with this value from MAC
    332                DiagsStatsTable.MacRxBcast = diagsValue;
   \   000128   85..82       MOV       DPL,?XSP + 0
   \   00012B   85..83       MOV       DPH,?XSP + 1
   \   00012E   12....       LCALL     ?XLOAD_R0123
   \   000131   90....       MOV       DPTR,#DiagsStatsTable + 14
   \   000134   8071         SJMP      ??ZDiagsGetStatsAttr_35
    333                break;
    334          
    335              case ZDIAGS_MAC_TX_BCAST:
    336                ZMacGetReq( ZMacDiagsTxBcast, (uint8 *)&diagsValue );
   \                     ??ZDiagsGetStatsAttr_6:
   \   000136                ; Setup parameters for call to function ZMacGetReq
   \   000136   AA..         MOV       R2,?XSP + 0
   \   000138   AB..         MOV       R3,?XSP + 1
   \   00013A   79EA         MOV       R1,#-0x16
   \   00013C   12....       LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
    337                // Update the statistics table with this value from MAC
    338                DiagsStatsTable.MacTxBcast = diagsValue;
   \   00013F   85..82       MOV       DPL,?XSP + 0
   \   000142   85..83       MOV       DPH,?XSP + 1
   \   000145   12....       LCALL     ?XLOAD_R0123
   \   000148   90....       MOV       DPTR,#DiagsStatsTable + 18
   \   00014B   805A         SJMP      ??ZDiagsGetStatsAttr_35
    339                break;
    340          
    341              case ZDIAGS_MAC_RX_UCAST:
    342                ZMacGetReq( ZMacDiagsRxUcast, (uint8 *)&diagsValue );
   \                     ??ZDiagsGetStatsAttr_7:
   \   00014D                ; Setup parameters for call to function ZMacGetReq
   \   00014D   AA..         MOV       R2,?XSP + 0
   \   00014F   AB..         MOV       R3,?XSP + 1
   \   000151   79EB         MOV       R1,#-0x15
   \   000153   12....       LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
    343                // Update the statistics table with this value from MAC
    344                DiagsStatsTable.MacRxUcast = diagsValue;
   \   000156   85..82       MOV       DPL,?XSP + 0
   \   000159   85..83       MOV       DPH,?XSP + 1
   \   00015C   12....       LCALL     ?XLOAD_R0123
   \   00015F   90....       MOV       DPTR,#DiagsStatsTable + 22
   \   000162   8043         SJMP      ??ZDiagsGetStatsAttr_35
    345                break;
    346          
    347              case ZDIAGS_MAC_TX_UCAST:
    348                ZMacGetReq( ZMacDiagsTxUcast, (uint8 *)&diagsValue );
   \                     ??ZDiagsGetStatsAttr_8:
   \   000164                ; Setup parameters for call to function ZMacGetReq
   \   000164   AA..         MOV       R2,?XSP + 0
   \   000166   AB..         MOV       R3,?XSP + 1
   \   000168   79EC         MOV       R1,#-0x14
   \   00016A   12....       LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
    349                // Update the statistics table with this value from MAC
    350                DiagsStatsTable.MacTxUcast = diagsValue;
   \   00016D   85..82       MOV       DPL,?XSP + 0
   \   000170   85..83       MOV       DPH,?XSP + 1
   \   000173   12....       LCALL     ?XLOAD_R0123
   \   000176   90....       MOV       DPTR,#DiagsStatsTable + 26
   \   000179   802C         SJMP      ??ZDiagsGetStatsAttr_35
    351                break;
    352          
    353              case ZDIAGS_MAC_TX_UCAST_RETRY:
    354                ZMacGetReq( ZMacDiagsTxUcastRetry, (uint8 *)&diagsValue );
   \                     ??ZDiagsGetStatsAttr_9:
   \   00017B                ; Setup parameters for call to function ZMacGetReq
   \   00017B   AA..         MOV       R2,?XSP + 0
   \   00017D   AB..         MOV       R3,?XSP + 1
   \   00017F   79ED         MOV       R1,#-0x13
   \   000181   12....       LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
    355                // Update the statistics table with this value from MAC
    356                DiagsStatsTable.MacTxUcastRetry = diagsValue;
   \   000184   85..82       MOV       DPL,?XSP + 0
   \   000187   85..83       MOV       DPH,?XSP + 1
   \   00018A   12....       LCALL     ?XLOAD_R0123
   \   00018D   90....       MOV       DPTR,#DiagsStatsTable + 30
   \   000190   8015         SJMP      ??ZDiagsGetStatsAttr_35
    357                break;
    358          
    359              case ZDIAGS_MAC_TX_UCAST_FAIL:
    360                ZMacGetReq( ZMacDiagsTxUcastFail, (uint8 *)&diagsValue );
   \                     ??ZDiagsGetStatsAttr_10:
   \   000192                ; Setup parameters for call to function ZMacGetReq
   \   000192   AA..         MOV       R2,?XSP + 0
   \   000194   AB..         MOV       R3,?XSP + 1
   \   000196   79EE         MOV       R1,#-0x12
   \   000198   12....       LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
    361                // Update the statistics table with this value from MAC
    362                DiagsStatsTable.MacTxUcastFail = diagsValue;
   \   00019B   85..82       MOV       DPL,?XSP + 0
   \   00019E   85..83       MOV       DPH,?XSP + 1
   \   0001A1   12....       LCALL     ?XLOAD_R0123
   \   0001A4   90....       MOV       DPTR,#DiagsStatsTable + 34
   \                     ??ZDiagsGetStatsAttr_35:
   \   0001A7   12....       LCALL     ?XSTORE_R0123
    363                break;
   \   0001AA   02....       LJMP      ??ZDiagsGetStatsAttr_34 & 0xFFFF
    364          
    365              // NWK Diagnostics
    366              case ZDIAGS_ROUTE_DISC_INITIATED:
    367                diagsValue = DiagsStatsTable.RouteDiscInitiated;
   \                     ??ZDiagsGetStatsAttr_11:
   \   0001AD   90....       MOV       DPTR,#DiagsStatsTable + 38
   \   0001B0   806C         SJMP      ??ZDiagsGetStatsAttr_36
    368                break;
    369          
    370              case ZDIAGS_NEIGHBOR_ADDED:
    371                diagsValue = DiagsStatsTable.NeighborAdded;
   \                     ??ZDiagsGetStatsAttr_12:
   \   0001B2   90....       MOV       DPTR,#DiagsStatsTable + 40
   \   0001B5   8067         SJMP      ??ZDiagsGetStatsAttr_36
    372                break;
    373          
    374              case ZDIAGS_NEIGHBOR_REMOVED:
    375                diagsValue = DiagsStatsTable.NeighborRemoved;
   \                     ??ZDiagsGetStatsAttr_13:
   \   0001B7   90....       MOV       DPTR,#DiagsStatsTable + 42
   \   0001BA   8062         SJMP      ??ZDiagsGetStatsAttr_36
    376                break;
    377          
    378              case ZDIAGS_NEIGHBOR_STALE:
    379                diagsValue = DiagsStatsTable.NeighborStale;
   \                     ??ZDiagsGetStatsAttr_14:
   \   0001BC   90....       MOV       DPTR,#DiagsStatsTable + 44
   \   0001BF   805D         SJMP      ??ZDiagsGetStatsAttr_36
    380                break;
    381          
    382              case ZDIAGS_JOIN_INDICATION:
    383                diagsValue = DiagsStatsTable.JoinIndication;
   \                     ??ZDiagsGetStatsAttr_15:
   \   0001C1   90....       MOV       DPTR,#DiagsStatsTable + 46
   \   0001C4   8058         SJMP      ??ZDiagsGetStatsAttr_36
    384                break;
    385          
    386              case ZDIAGS_CHILD_MOVED:
    387                diagsValue = DiagsStatsTable.ChildMoved;
   \                     ??ZDiagsGetStatsAttr_16:
   \   0001C6   90....       MOV       DPTR,#DiagsStatsTable + 48
   \   0001C9   8053         SJMP      ??ZDiagsGetStatsAttr_36
    388                break;
    389          
    390              case ZDIAGS_NWK_FC_FAILURE:
    391                diagsValue = DiagsStatsTable.NwkFcFailure;
   \                     ??ZDiagsGetStatsAttr_17:
   \   0001CB   90....       MOV       DPTR,#DiagsStatsTable + 50
   \   0001CE   804E         SJMP      ??ZDiagsGetStatsAttr_36
    392                break;
    393          
    394              case ZDIAGS_NWK_DECRYPT_FAILURES:
    395                diagsValue = DiagsStatsTable.NwkDecryptFailures;
   \                     ??ZDiagsGetStatsAttr_18:
   \   0001D0   90....       MOV       DPTR,#DiagsStatsTable + 52
   \   0001D3   8049         SJMP      ??ZDiagsGetStatsAttr_36
    396                break;
    397          
    398              case ZDIAGS_PACKET_BUFFER_ALLOCATE_FAILURES:
    399                diagsValue = DiagsStatsTable.PacketBufferAllocateFailures;
   \                     ??ZDiagsGetStatsAttr_19:
   \   0001D5   90....       MOV       DPTR,#DiagsStatsTable + 54
   \   0001D8   8044         SJMP      ??ZDiagsGetStatsAttr_36
    400                break;
    401          
    402              case ZDIAGS_RELAYED_UCAST:
    403                diagsValue = DiagsStatsTable.RelayedUcast;
   \                     ??ZDiagsGetStatsAttr_20:
   \   0001DA   90....       MOV       DPTR,#DiagsStatsTable + 56
   \   0001DD   803F         SJMP      ??ZDiagsGetStatsAttr_36
    404                break;
    405          
    406              case ZDIAGS_PHY_TO_MAC_QUEUE_LIMIT_REACHED:
    407                diagsValue = DiagsStatsTable.PhyToMacQueueLimitReached;
   \                     ??ZDiagsGetStatsAttr_21:
   \   0001DF   90....       MOV       DPTR,#DiagsStatsTable + 58
   \   0001E2   803A         SJMP      ??ZDiagsGetStatsAttr_36
    408                break;
    409          
    410              case ZDIAGS_PACKET_VALIDATE_DROP_COUNT:
    411                diagsValue = DiagsStatsTable.PacketValidateDropCount;
   \                     ??ZDiagsGetStatsAttr_22:
   \   0001E4   90....       MOV       DPTR,#DiagsStatsTable + 60
   \   0001E7   8035         SJMP      ??ZDiagsGetStatsAttr_36
    412                break;
    413          
    414              // APS Diagnostics
    415              case ZDIAGS_APS_RX_BCAST:
    416                diagsValue = DiagsStatsTable.ApsRxBcast;
   \                     ??ZDiagsGetStatsAttr_23:
   \   0001E9   90....       MOV       DPTR,#DiagsStatsTable + 62
   \   0001EC   8030         SJMP      ??ZDiagsGetStatsAttr_36
    417                break;
    418          
    419              case ZDIAGS_APS_TX_BCAST:
    420                diagsValue = DiagsStatsTable.ApsTxBcast;
   \                     ??ZDiagsGetStatsAttr_24:
   \   0001EE   90....       MOV       DPTR,#DiagsStatsTable + 64
   \   0001F1   802B         SJMP      ??ZDiagsGetStatsAttr_36
    421                break;
    422          
    423              case ZDIAGS_APS_RX_UCAST:
    424                diagsValue = DiagsStatsTable.ApsRxUcast;
   \                     ??ZDiagsGetStatsAttr_25:
   \   0001F3   90....       MOV       DPTR,#DiagsStatsTable + 66
   \   0001F6   8026         SJMP      ??ZDiagsGetStatsAttr_36
    425                break;
    426          
    427              case ZDIAGS_APS_TX_UCAST_SUCCESS:
    428                diagsValue = DiagsStatsTable.ApsTxUcastSuccess;
   \                     ??ZDiagsGetStatsAttr_26:
   \   0001F8   90....       MOV       DPTR,#DiagsStatsTable + 68
   \   0001FB   8021         SJMP      ??ZDiagsGetStatsAttr_36
    429                break;
    430          
    431              case ZDIAGS_APS_TX_UCAST_RETRY:
    432                diagsValue = DiagsStatsTable.ApsTxUcastRetry;
   \                     ??ZDiagsGetStatsAttr_27:
   \   0001FD   90....       MOV       DPTR,#DiagsStatsTable + 70
   \   000200   801C         SJMP      ??ZDiagsGetStatsAttr_36
    433                break;
    434          
    435              case ZDIAGS_APS_TX_UCAST_FAIL:
    436                diagsValue = DiagsStatsTable.ApsTxUcastFail;
   \                     ??ZDiagsGetStatsAttr_28:
   \   000202   90....       MOV       DPTR,#DiagsStatsTable + 72
   \   000205   8017         SJMP      ??ZDiagsGetStatsAttr_36
    437                break;
    438          
    439              case ZDIAGS_APS_FC_FAILURE:
    440                diagsValue = DiagsStatsTable.ApsFcFailure;
   \                     ??ZDiagsGetStatsAttr_29:
   \   000207   90....       MOV       DPTR,#DiagsStatsTable + 74
   \   00020A   8012         SJMP      ??ZDiagsGetStatsAttr_36
    441                break;
    442          
    443              case ZDIAGS_APS_UNAUTHORIZED_KEY:
    444                diagsValue = DiagsStatsTable.ApsUnauthorizedKey;
   \                     ??ZDiagsGetStatsAttr_30:
   \   00020C   90....       MOV       DPTR,#DiagsStatsTable + 76
   \   00020F   800D         SJMP      ??ZDiagsGetStatsAttr_36
    445                break;
    446          
    447              case ZDIAGS_APS_DECRYPT_FAILURES:
    448                diagsValue = DiagsStatsTable.ApsDecryptFailures;
   \                     ??ZDiagsGetStatsAttr_31:
   \   000211   90....       MOV       DPTR,#DiagsStatsTable + 78
   \   000214   8008         SJMP      ??ZDiagsGetStatsAttr_36
    449                break;
    450          
    451              case ZDIAGS_APS_INVALID_PACKETS:
    452                diagsValue = DiagsStatsTable.ApsInvalidPackets;
   \                     ??ZDiagsGetStatsAttr_32:
   \   000216   90....       MOV       DPTR,#DiagsStatsTable + 80
   \   000219   8003         SJMP      ??ZDiagsGetStatsAttr_36
    453                break;
    454          
    455              case ZDIAGS_MAC_RETRIES_PER_APS_TX_SUCCESS:
    456                diagsValue = DiagsStatsTable.MacRetriesPerApsTxSuccess;
   \                     ??ZDiagsGetStatsAttr_33:
   \   00021B   90....       MOV       DPTR,#DiagsStatsTable + 82
   \                     ??ZDiagsGetStatsAttr_36:
   \   00021E   E0           MOVX      A,@DPTR
   \   00021F   F8           MOV       R0,A
   \   000220   A3           INC       DPTR
   \   000221   E0           MOVX      A,@DPTR
   \   000222   F9           MOV       R1,A
   \   000223   E8           MOV       A,R0
   \   000224   FC           MOV       R4,A
   \   000225   E9           MOV       A,R1
   \   000226   FD           MOV       R5,A
   \   000227   85..82       MOV       DPL,?XSP + 0
   \   00022A   85..83       MOV       DPH,?XSP + 1
   \   00022D   EC           MOV       A,R4
   \   00022E   F0           MOVX      @DPTR,A
   \   00022F   A3           INC       DPTR
   \   000230   ED           MOV       A,R5
   \   000231   F0           MOVX      @DPTR,A
   \   000232   A3           INC       DPTR
   \   000233   E4           CLR       A
   \   000234   F0           MOVX      @DPTR,A
   \   000235   A3           INC       DPTR
   \   000236   F0           MOVX      @DPTR,A
    457                break;
    458          
    459          
    460              default:
    461                break;
    462            }
    463          #endif // FEATURE_SYSTEM_STATS
    464          
    465            return ( diagsValue );
   \                     ??ZDiagsGetStatsAttr_34:
   \   000237   85..82       MOV       DPL,?XSP + 0
   \   00023A   85..83       MOV       DPH,?XSP + 1
   \   00023D   12....       LCALL     ?XLOAD_R2345
   \   000240   7404         MOV       A,#0x4
   \   000242   12....       LCALL     ?DEALLOC_XSTACK8
   \   000245   02....       LJMP      ??Subroutine2_0 & 0xFFFF
    466          }
    467          
    468          /****************************************************************************
    469           * @fn          ZDiagsGetStatsTable
    470           *
    471           * @brief       Reads the statistics and metrics table
    472           *
    473           * @return      pointer to ZDiagStatistics_t structure.
    474           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    475          DiagStatistics_t *ZDiagsGetStatsTable( void )
   \                     ZDiagsGetStatsTable:
    476          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    477          #if defined ( FEATURE_SYSTEM_STATS )
    478            // call this function to update the DiagsStatsTable with MAC values,
    479            // the return value does not need to be saved because the function
    480            // is updating the value in DiagsStatsTable
    481            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_RX_CRC_PASS );
   \   000004                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000004   7A64         MOV       R2,#0x64
   \   000006   7B00         MOV       R3,#0x0
   \   000008   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    482            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_RX_CRC_FAIL );
   \   00000B                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   00000B   7A65         MOV       R2,#0x65
   \   00000D   7B00         MOV       R3,#0x0
   \   00000F   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    483            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_RX_BCAST );
   \   000012                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000012   7A66         MOV       R2,#0x66
   \   000014   7B00         MOV       R3,#0x0
   \   000016   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    484            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_TX_BCAST );
   \   000019                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000019   7A67         MOV       R2,#0x67
   \   00001B   7B00         MOV       R3,#0x0
   \   00001D   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    485            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_RX_UCAST );
   \   000020                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000020   7A68         MOV       R2,#0x68
   \   000022   7B00         MOV       R3,#0x0
   \   000024   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    486            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_TX_UCAST );
   \   000027                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000027   7A69         MOV       R2,#0x69
   \   000029   7B00         MOV       R3,#0x0
   \   00002B   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    487            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_TX_UCAST_RETRY );
   \   00002E                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   00002E   7A6A         MOV       R2,#0x6a
   \   000030   7B00         MOV       R3,#0x0
   \   000032   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    488            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_TX_UCAST_FAIL );
   \   000035                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000035   7A6B         MOV       R2,#0x6b
   \   000037   7B00         MOV       R3,#0x0
   \   000039   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    489          
    490            return ( &DiagsStatsTable );
   \   00003C   7A..         MOV       R2,#DiagsStatsTable & 0xff
   \   00003E   7B..         MOV       R3,#(DiagsStatsTable >> 8) & 0xff
   \   000040   D083         POP       DPH
   \   000042   D082         POP       DPL
   \   000044   02....       LJMP      ?BRET
    491          #else
    492            return ( NULL );
    493          #endif  // FEATURE_SYSTEM_STATS
    494          }
    495          
    496          /****************************************************************************
    497           * @fn          ZDiagsRestoreStatsFromNV
    498           *
    499           * @brief       Restores the statistics table from NV into the RAM table.
    500           *
    501           * @param       none.
    502           *
    503           * @return      ZSuccess - if NV data was restored from NV.
    504           *              ZFailure - Otherwise, NV_OPER_FAILED for failure.
    505           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    506          uint8 ZDiagsRestoreStatsFromNV( void )
   \                     ZDiagsRestoreStatsFromNV:
    507          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    508            uint8 retValue = ZFailure;
   \   000005   7E01         MOV       R6,#0x1
    509          
    510          #if defined ( FEATURE_SYSTEM_STATS )
    511          
    512            // restore diagnostics table from NV into RAM table
    513            if ( osal_nv_read( ZCD_NV_DIAGNOSTIC_STATS, 0,
    514                                   (uint16)sizeof( DiagStatistics_t ),
    515                                   &DiagsStatsTable ) == SUCCESS )
   \   000007                ; Setup parameters for call to function osal_nv_read
   \   000007   75....       MOV       ?V0,#DiagsStatsTable & 0xff
   \   00000A   75....       MOV       ?V1,#(DiagsStatsTable >> 8) & 0xff
   \   00000D   78..         MOV       R0,#?V0
   \   00000F   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000012   75..54       MOV       ?V0,#0x54
   \   000015   75..00       MOV       ?V1,#0x0
   \   000018   78..         MOV       R0,#?V0
   \   00001A   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00001D   7C00         MOV       R4,#0x0
   \   00001F   7D00         MOV       R5,#0x0
   \   000021   7A50         MOV       R2,#0x50
   \   000023   7B00         MOV       R3,#0x0
   \   000025   12....       LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
   \   000028   7404         MOV       A,#0x4
   \   00002A   12....       LCALL     ?DEALLOC_XSTACK8
   \   00002D   E9           MOV       A,R1
   \   00002E   704A         JNZ       ??ZDiagsRestoreStatsFromNV_0
    516            {
    517              // restore MAC values into the PIB
    518              ZMacSetReq( ZMacDiagsRxCrcPass, (uint8 *)&(DiagsStatsTable.MacRxCrcPass) );
   \   000030                ; Setup parameters for call to function ZMacSetReq
   \   000030   7A..         MOV       R2,#(DiagsStatsTable + 6) & 0xff
   \   000032   7B..         MOV       R3,#((DiagsStatsTable + 6) >> 8) & 0xff
   \   000034   79E7         MOV       R1,#-0x19
   \   000036   12....       LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
    519              ZMacSetReq( ZMacDiagsRxCrcFail, (uint8 *)&(DiagsStatsTable.MacRxCrcFail) );
   \   000039                ; Setup parameters for call to function ZMacSetReq
   \   000039   7A..         MOV       R2,#(DiagsStatsTable + 10) & 0xff
   \   00003B   7B..         MOV       R3,#((DiagsStatsTable + 10) >> 8) & 0xff
   \   00003D   79E8         MOV       R1,#-0x18
   \   00003F   12....       LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
    520              ZMacSetReq( ZMacDiagsRxBcast, (uint8 *)&(DiagsStatsTable.MacRxBcast) );
   \   000042                ; Setup parameters for call to function ZMacSetReq
   \   000042   7A..         MOV       R2,#(DiagsStatsTable + 14) & 0xff
   \   000044   7B..         MOV       R3,#((DiagsStatsTable + 14) >> 8) & 0xff
   \   000046   79E9         MOV       R1,#-0x17
   \   000048   12....       LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
    521              ZMacSetReq( ZMacDiagsTxBcast, (uint8 *)&(DiagsStatsTable.MacTxBcast) );
   \   00004B                ; Setup parameters for call to function ZMacSetReq
   \   00004B   7A..         MOV       R2,#(DiagsStatsTable + 18) & 0xff
   \   00004D   7B..         MOV       R3,#((DiagsStatsTable + 18) >> 8) & 0xff
   \   00004F   79EA         MOV       R1,#-0x16
   \   000051   12....       LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
    522              ZMacSetReq( ZMacDiagsRxUcast, (uint8 *)&(DiagsStatsTable.MacRxUcast) );
   \   000054                ; Setup parameters for call to function ZMacSetReq
   \   000054   7A..         MOV       R2,#(DiagsStatsTable + 22) & 0xff
   \   000056   7B..         MOV       R3,#((DiagsStatsTable + 22) >> 8) & 0xff
   \   000058   79EB         MOV       R1,#-0x15
   \   00005A   12....       LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
    523              ZMacSetReq( ZMacDiagsTxUcast, (uint8 *)&(DiagsStatsTable.MacTxUcast) );
   \   00005D                ; Setup parameters for call to function ZMacSetReq
   \   00005D   7A..         MOV       R2,#(DiagsStatsTable + 26) & 0xff
   \   00005F   7B..         MOV       R3,#((DiagsStatsTable + 26) >> 8) & 0xff
   \   000061   79EC         MOV       R1,#-0x14
   \   000063   12....       LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
    524              ZMacSetReq( ZMacDiagsTxUcastRetry, (uint8 *)&(DiagsStatsTable.MacTxUcastRetry) );
   \   000066                ; Setup parameters for call to function ZMacSetReq
   \   000066   7A..         MOV       R2,#(DiagsStatsTable + 30) & 0xff
   \   000068   7B..         MOV       R3,#((DiagsStatsTable + 30) >> 8) & 0xff
   \   00006A   79ED         MOV       R1,#-0x13
   \   00006C   12....       LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
    525              ZMacSetReq( ZMacDiagsTxUcastFail, (uint8 *)&(DiagsStatsTable.MacTxUcastFail) );
   \   00006F                ; Setup parameters for call to function ZMacSetReq
   \   00006F   7A..         MOV       R2,#(DiagsStatsTable + 34) & 0xff
   \   000071   7B..         MOV       R3,#((DiagsStatsTable + 34) >> 8) & 0xff
   \   000073   79EE         MOV       R1,#-0x12
   \   000075   12....       LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
    526          
    527              retValue = ZSuccess;
   \   000078   7E00         MOV       R6,#0x0
    528            }
    529          #endif // FEATURE_SYSTEM_STATS
    530          
    531            return ( retValue );
   \                     ??ZDiagsRestoreStatsFromNV_0:
   \   00007A   02....       LJMP      ?Subroutine0 & 0xFFFF
    532          }
    533          
    534          /****************************************************************************
    535           * @fn          ZDiagsSaveStatsToNV
    536           *
    537           * @brief       Saves the statistics table from RAM to NV.
    538           *
    539           * @param       none.
    540           *
    541           * @return      System Time.
    542           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    543          uint32 ZDiagsSaveStatsToNV( void )
   \                     ZDiagsSaveStatsToNV:
    544          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000   74F2         MOV       A,#-0xe
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
    545            uint32 sysClock = 0;
    546          
    547          #if defined ( FEATURE_SYSTEM_STATS )
    548            // call this function to update the DiagsStatsTable with MAC values,
    549            // the return value does not need to be saved because the function
    550            // is updating the value in DiagsStatsTable
    551            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_RX_CRC_PASS );
   \   000005                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000005   7A64         MOV       R2,#0x64
   \   000007   7B00         MOV       R3,#0x0
   \   000009   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    552            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_RX_CRC_FAIL );
   \   00000C                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   00000C   7A65         MOV       R2,#0x65
   \   00000E   7B00         MOV       R3,#0x0
   \   000010   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    553            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_RX_BCAST );
   \   000013                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000013   7A66         MOV       R2,#0x66
   \   000015   7B00         MOV       R3,#0x0
   \   000017   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    554            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_TX_BCAST );
   \   00001A                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   00001A   7A67         MOV       R2,#0x67
   \   00001C   7B00         MOV       R3,#0x0
   \   00001E   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    555            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_RX_UCAST );
   \   000021                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000021   7A68         MOV       R2,#0x68
   \   000023   7B00         MOV       R3,#0x0
   \   000025   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    556            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_TX_UCAST );
   \   000028                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000028   7A69         MOV       R2,#0x69
   \   00002A   7B00         MOV       R3,#0x0
   \   00002C   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    557            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_TX_UCAST_RETRY );
   \   00002F                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   00002F   7A6A         MOV       R2,#0x6a
   \   000031   7B00         MOV       R3,#0x0
   \   000033   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    558            (void)ZDiagsGetStatsAttr( ZDIAGS_MAC_TX_UCAST_FAIL );
   \   000036                ; Setup parameters for call to function ZDiagsGetStatsAttr
   \   000036   7A6B         MOV       R2,#0x6b
   \   000038   7B00         MOV       R3,#0x0
   \   00003A   12....       LCALL     `??ZDiagsGetStatsAttr::?relay`; Banked call to: ZDiagsGetStatsAttr
    559          
    560            // System Clock when statistics were saved
    561            sysClock = DiagsStatsTable.SysClock = osal_GetSystemClock();
   \   00003D                ; Setup parameters for call to function osal_GetSystemClock
   \   00003D   12....       LCALL     `??osal_GetSystemClock::?relay`; Banked call to: osal_GetSystemClock
   \   000040   8A..         MOV       ?V0,R2
   \   000042   8B..         MOV       ?V1,R3
   \   000044   8C..         MOV       ?V2,R4
   \   000046   8D..         MOV       ?V3,R5
   \   000048   90....       MOV       DPTR,#DiagsStatsTable
   \   00004B   78..         MOV       R0,#?V0
   \   00004D   12....       LCALL     ?L_MOV_TO_X
    562          
    563            // save the statistics table from RAM to NV
    564            osal_nv_write( ZCD_NV_DIAGNOSTIC_STATS, 0,
    565                           sizeof( DiagStatistics_t ), &DiagsStatsTable );
   \   000050                ; Setup parameters for call to function osal_nv_write
   \   000050   75....       MOV       ?V4,#DiagsStatsTable & 0xff
   \   000053   75....       MOV       ?V5,#(DiagsStatsTable >> 8) & 0xff
   \   000056   78..         MOV       R0,#?V4
   \   000058   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00005B   75..54       MOV       ?V4,#0x54
   \   00005E   75..00       MOV       ?V5,#0x0
   \   000061   78..         MOV       R0,#?V4
   \   000063   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000066   7C00         MOV       R4,#0x0
   \   000068   7D00         MOV       R5,#0x0
   \   00006A   7A50         MOV       R2,#0x50
   \   00006C   7B00         MOV       R3,#0x0
   \   00006E   12....       LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
   \   000071   7404         MOV       A,#0x4
   \   000073   12....       LCALL     ?DEALLOC_XSTACK8
    566          #endif
    567          
    568            // returns the System Time
    569            return ( sysClock );
   \   000076   AA..         MOV       R2,?V0
   \   000078   AB..         MOV       R3,?V1
   \   00007A   AC..         MOV       R4,?V2
   \   00007C   AD..         MOV       R5,?V3
   \   00007E   02....       LJMP      ?Subroutine1 & 0xFFFF
    570          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??ZDiagsInitStats::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZDiagsInitStats

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??ZDiagsClearStats::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZDiagsClearStats

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??ZDiagsUpdateStats::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZDiagsUpdateStats

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??ZDiagsGetStatsAttr::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZDiagsGetStatsAttr

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??ZDiagsGetStatsTable::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZDiagsGetStatsTable

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??ZDiagsRestoreStatsFromNV::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZDiagsRestoreStatsFromNV

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??ZDiagsSaveStatsToNV::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ZDiagsSaveStatsToNV
    571          
    572          /****************************************************************************
    573          ****************************************************************************/

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0     30   ZDiagsClearStats
        0     16   -> osal_GetSystemClock
        0     16   -> osal_memset
        0     20   -> osal_nv_write
      0     32   ZDiagsGetStatsAttr
        0     14   -> ZMacGetReq
        0     18   -> osal_nv_read
      2      0   ZDiagsGetStatsTable
        2      0   -> ZDiagsGetStatsAttr
      0     12   ZDiagsInitStats
        0     10   -> ZDiagsClearStats
        0     10   -> ZDiagsRestoreStatsFromNV
        0     12   -> osal_nv_item_init
      0     24   ZDiagsRestoreStatsFromNV
        0     10   -> ZMacSetReq
        0     14   -> osal_nv_read
      0     18   ZDiagsSaveStatsToNV
        0     14   -> ZDiagsGetStatsAttr
        0     14   -> osal_GetSystemClock
        0     18   -> osal_nv_write
      0     10   ZDiagsUpdateStats
        0     10   -> osal_GetSystemClock


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       5  ??Subroutine2_0
       2  ?Subroutine0
       5  ?Subroutine1
      84  DiagsStatsTable
     148  ZDiagsClearStats
       6  ZDiagsClearStats::?relay
     584  ZDiagsGetStatsAttr
       6  ZDiagsGetStatsAttr::?relay
      71  ZDiagsGetStatsTable
       6  ZDiagsGetStatsTable::?relay
      62  ZDiagsInitStats
       6  ZDiagsInitStats::?relay
     125  ZDiagsRestoreStatsFromNV
       6  ZDiagsRestoreStatsFromNV::?relay
     129  ZDiagsSaveStatsToNV
       6  ZDiagsSaveStatsToNV::?relay
     260  ZDiagsUpdateStats
       6  ZDiagsUpdateStats::?relay

 
 1 391 bytes in segment BANKED_CODE
    42 bytes in segment BANK_RELAYS
    84 bytes in segment XDATA_Z
 
    42 bytes of CODE     memory
 1 391 bytes of HUGECODE memory
    84 bytes of XDATA    memory

Errors: none
Warnings: none
