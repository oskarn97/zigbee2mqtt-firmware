###############################################################################
#
# IAR C/C++ Compiler V10.10.1.4655 for 8051               16/Feb/2018  21:40:25
# Copyright 2004-2017 IAR Systems AB.
# Evaluation license - IAR Embedded Workbench for 8051, Evaluation version 10.10
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Components\mac\low_level\srf04\mac_low_level.c
#    Command line       =  
#        -f C:\Users\Oskar\AppData\Local\Temp\EW56A8.tmp ("C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Components\mac\low_level\srf04\mac_low_level.c" -D
#        FEATURE_SYSTEM_STATS -D CC2531ZNP -D POWER_SAVING -D xTC_LINKKEY_JOIN
#        -lC "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-Debug\List" -lA
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-Debug\List"
#        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-Debug\Obj" -e --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 16 -f "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\Source\znp.cfg"
#        (-DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        "-DZSTACK_DEVICE_BUILD=(DEVICE_BUILD_COORDINATOR | DEVICE_BUILD_ROUTER
#        | DEVICE_BUILD_ENDDEVICE)" -DNWK_AUTO_POLL -DZNP_RUN_WDOG=FALSE
#        -DZNP_UART_BAUD=HAL_UART_BR_115200 -DZIGBEEPRO -DZIGBEE_FRAGMENTATION
#        -DINTER_PAN -DOSAL_CLOCK -DOSAL_SAPI=FALSE -DSAPI_CB_FUNC=FALSE
#        -DHOLD_AUTO_START -DNV_RESTORE -DNV_INIT -DNUM_DISC_ATTEMPTS=0
#        -DMT_UTIL_FUNC -DMT_SYS_FUNC -DMT_AF_FUNC -DMT_SAPI_FUNC
#        -DMT_SAPI_CB_FUNC -DMT_ZDO_CB_FUNC -DMT_ZDO_FUNC -DMT_ZDO_MGMT
#        -DMT_ZDO_EXTENSIONS -DMT_APP_FUNC) -f "C:\Texas Instruments\Z-Stack
#        Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
#        -f "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\SE\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\ZMain\TI2530ZNP\" -I
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530USB\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530USB\usb\library\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530USB\usb\library\cc2531\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530USB\usb\class_cdc\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\high_level\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mt\" -I
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\osal\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\ecc\binary163\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\ecc\binary283\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\saddr\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\sdata\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\af\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\nwk\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sapi\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sec\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sys\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\zcl\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\zdo\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\zmac\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\zmac\f8w\"
#        -Ohz --require_prototypes --no_code_motion)
#    Locale             =  German_Germany.1252
#    List file          =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-Debug\List\mac_low_level.lst
#    Object file        =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2531-Debug\Obj\mac_low_level.r51
#
###############################################################################

C:\Texas Instruments\Z-Stack Home 1.2.2a.44539\Components\mac\low_level\srf04\mac_low_level.c
      1          /**************************************************************************************************
      2            Filename:       mac_low_level.c
      3            Revised:        $Date: 2015-02-17 14:17:44 -0800 (Tue, 17 Feb 2015) $
      4            Revision:       $Revision: 42683 $
      5          
      6            Description:    Describe the purpose and contents of the file.
      7          
      8          
      9            Copyright 2006-2015 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /* ------------------------------------------------------------------------------------------------
     41           *                                          Includes
     42           * ------------------------------------------------------------------------------------------------
     43           */
     44          
     45          /* hal */
     46          #include "hal_types.h"
     47          #include "hal_mcu.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1
     48          
     49          #include "mac_main.h"
     50          
     51          /* exported low-level */
     52          #include "mac_low_level.h"
     53          
     54          /* low-level specific */
     55          #include "mac_radio.h"
     56          #include "mac_rx.h"
     57          #include "mac_tx.h"
     58          #include "mac_rx_onoff.h"
     59          #include "mac_backoff_timer.h"
     60          #include "mac_sleep.h"
     61          
     62          /* high level */
     63          #include "mac_pib.h"
     64          
     65          /* target specific */
     66          #include "mac_radio_defs.h"
     67          
     68          /* debug */
     69          #include "mac_assert.h"
     70          
     71          /* turn on additional power savings */
     72          #define MAC_EXTRA_POWER_SAVINGS  1
     73          
     74          #if !defined ( HAL_CLOCK_CRYSTAL )
     75          /* DCO has a frequency error of 2% */
     76          const uint16 CODE macBeaconMarginDCO[] =
     77          {
     78            3,
     79            3,
     80            4,
     81            8,
     82            16,
     83            31,
     84            62,
     85            123,
     86            246,
     87            492,
     88            983,
     89            1967,
     90            3933,
     91            7865,
     92            15729,
     93            0
     94          };
     95          #endif
     96          
     97          /**************************************************************************************************
     98           * @fn          macLowLevelInit
     99           *
    100           * @brief       Initialize low-level MAC.  Called only once on system power-up.
    101           *
    102           * @param       none
    103           *
    104           * @return      none
    105           **************************************************************************************************
    106           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    107          MAC_INTERNAL_API void macLowLevelInit(void)
   \                     macLowLevelInit:
    108          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    109            /* initialize mcu before anything else */
    110            MAC_RADIO_MCU_INIT();
   \   000004                ; Setup parameters for call to function macMcuInit
   \   000004   12....       LCALL     `??macMcuInit::?relay`; Banked call to: macMcuInit
    111          
    112            /* initialize (override) beacon margin timing table */
    113          #if !defined ( HAL_CLOCK_CRYSTAL )
    114            {
    115              uint8 i;
    116          
    117              for (i = 0; i < sizeof(macBeaconMarginDCO)/sizeof(macBeaconMarginDCO[0]); i++)
    118              {
    119                macBeaconMargin[i] = macBeaconMarginDCO[i];
    120              }
    121            }
    122          #endif
    123          
    124            /* software initialziation */
    125            macRadioInit();
   \   000007                ; Setup parameters for call to function macRadioInit
   \   000007   12....       LCALL     `??macRadioInit::?relay`; Banked call to: macRadioInit
    126            macRxOnOffInit();
   \   00000A                ; Setup parameters for call to function macRxOnOffInit
   \   00000A   12....       LCALL     `??macRxOnOffInit::?relay`; Banked call to: macRxOnOffInit
    127            macRxInit();
   \   00000D                ; Setup parameters for call to function macRxInit
   \   00000D   12....       LCALL     `??macRxInit::?relay`; Banked call to: macRxInit
    128            macTxInit();
   \   000010                ; Setup parameters for call to function macTxInit
   \   000010   12....       LCALL     `??macTxInit::?relay`; Banked call to: macTxInit
    129            macBackoffTimerInit();
   \   000013                ; Setup parameters for call to function macBackoffTimerInit
   \   000013   12....       LCALL     `??macBackoffTimerInit::?relay`; Banked call to: macBackoffTimerInit
    130          }
   \   000016   80..         SJMP      ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP       DPH
   \   000002   D082         POP       DPL
   \   000004   02....       LJMP      ?BRET
    131          
    132          
    133          /**************************************************************************************************
    134           * @fn          macLowLevelReset
    135           *
    136           * @brief       Reset low-level MAC.
    137           *
    138           * @param       none
    139           *
    140           * @return      none
    141           **************************************************************************************************
    142           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    143          MAC_INTERNAL_API void macLowLevelReset(void)
   \                     macLowLevelReset:
    144          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    145            MAC_ASSERT(!HAL_INTERRUPTS_ARE_ENABLED());   /* interrupts must be disabled */
   \   000004   A2AF         MOV       C,0xa8.7
   \   000006   5003         JNC       ??macLowLevelReset_0
   \   000008                ; Setup parameters for call to function halAssertHandler
   \   000008   12....       LCALL     `??halAssertHandler::?relay`; Banked call to: halAssertHandler
    146          
    147            /* reset radio modules;  if not awake, skip this */
    148            if (macSleepState == MAC_SLEEP_STATE_AWAKE)
   \                     ??macLowLevelReset_0:
   \   00000B   90....       MOV       DPTR,#macSleepState
   \   00000E   E0           MOVX      A,@DPTR
   \   00000F   7006         JNZ       ??macLowLevelReset_1
    149            {
    150              macRxTxReset();
   \   000011                ; Setup parameters for call to function macRxTxReset
   \   000011   12....       LCALL     `??macRxTxReset::?relay`; Banked call to: macRxTxReset
    151              macRadioReset();
   \   000014                ; Setup parameters for call to function macRadioReset
   \   000014   12....       LCALL     `??macRadioReset::?relay`; Banked call to: macRadioReset
    152            }
    153          
    154            /* reset timer */
    155            macBackoffTimerReset();
   \                     ??macLowLevelReset_1:
   \   000017                ; Setup parameters for call to function macBackoffTimerReset
   \   000017   12....       LCALL     `??macBackoffTimerReset::?relay`; Banked call to: macBackoffTimerReset
    156          
    157            /* power up the radio */
    158            macSleepWakeUp();
   \   00001A                ; Setup parameters for call to function macSleepWakeUp
   \   00001A   12....       LCALL     `??macSleepWakeUp::?relay`; Banked call to: macSleepWakeUp
    159            
    160            /* Turn on extra power savings*/
    161            pMacPib->rf4cepowerSavings = MAC_EXTRA_POWER_SAVINGS;
   \   00001D   90....       MOV       DPTR,#macPib + 60
   \   000020   7401         MOV       A,#0x1
   \   000022   F0           MOVX      @DPTR,A
    162          }
   \   000023   80..         SJMP      ?Subroutine0
   \   000025                REQUIRE _A_IEN0
    163          
    164          
    165          /**************************************************************************************************
    166           * @fn          macLowLevelResume
    167           *
    168           * @brief       Resume the low-level MAC after a successful return from macLowLevelYield.
    169           *              Note: assuming interrupts are disabled.
    170           *
    171           * input parameters
    172           *
    173           * None.
    174           *
    175           * output parameters
    176           *
    177           * None.
    178           *
    179           * @return      None.
    180           **************************************************************************************************
    181           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    182          MAC_INTERNAL_API void macLowLevelResume(void)
   \                     macLowLevelResume:
    183          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    184            macRadioInit();
   \   000004                ; Setup parameters for call to function macRadioInit
   \   000004   12....       LCALL     `??macRadioInit::?relay`; Banked call to: macRadioInit
    185          }
   \   000007                REQUIRE ?Subroutine0
   \   000007                ; // Fall through to label ?Subroutine0
    186          
    187          
    188          /**************************************************************************************************
    189           * @fn          macLowLevelYield
    190           *
    191           * @brief       Check whether or not the low-level MAC is ready to yield.
    192           *
    193           * input parameters
    194           *
    195           * None.
    196           *
    197           * output parameters
    198           *
    199           * None.
    200           *
    201           * @return      TRUE or FALSE whether the low-level MAC is ready to yield.
    202           **************************************************************************************************
    203           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    204          MAC_INTERNAL_API bool macLowLevelYield(void)
   \                     macLowLevelYield:
    205          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    206            bool rtrn = TRUE;
   \   000004   7901         MOV       R1,#0x1
    207            halIntState_t  s;
    208            HAL_ENTER_CRITICAL_SECTION(s);
   \   000006   A2AF         MOV       C,0xa8.7
   \   000008   E4           CLR       A
   \   000009   33           RLC       A
   \   00000A   F8           MOV       R0,A
   \   00000B   C2AF         CLR       0xa8.7
    209          
    210            // If RX or TX is active or any RX enable flags are set, it's not OK to yield.
    211            if (macRxActive || macRxOutgoingAckFlag || macTxActive || (macRxEnableFlags & ~MAC_RX_WHEN_IDLE))
   \   00000D   90....       MOV       DPTR,#macRxActive
   \   000010   E0           MOVX      A,@DPTR
   \   000011   7014         JNZ       ??macLowLevelYield_0
   \   000013   90....       MOV       DPTR,#macRxOutgoingAckFlag
   \   000016   E0           MOVX      A,@DPTR
   \   000017   700E         JNZ       ??macLowLevelYield_0
   \   000019   90....       MOV       DPTR,#macTxActive
   \   00001C   E0           MOVX      A,@DPTR
   \   00001D   7008         JNZ       ??macLowLevelYield_0
   \   00001F   90....       MOV       DPTR,#macRxEnableFlags
   \   000022   E0           MOVX      A,@DPTR
   \   000023   54FD         ANL       A,#0xfd
   \   000025   6002         JZ        ??macLowLevelYield_1
    212            {
    213              rtrn = FALSE;
   \                     ??macLowLevelYield_0:
   \   000027   7900         MOV       R1,#0x0
    214            }
    215          
    216            HAL_EXIT_CRITICAL_SECTION(s);
   \                     ??macLowLevelYield_1:
   \   000029   E8           MOV       A,R0
   \   00002A   A2E0         MOV       C,0xE0 /* A   */.0
   \   00002C   92AF         MOV       0xa8.7,C
    217            return rtrn;
   \   00002E   80..         SJMP      ?Subroutine0
   \   000030                REQUIRE _A_IEN0
    218          }
    219          
    220          
    221          /**************************************************************************************************
    222           * @fn          macLowLevelDiags
    223           *
    224           * @brief       Increments a specified diagnostic counter (stored in the PIB).
    225           *
    226           * @param       pibAttribute - PIB attribute to be incremented.
    227           *
    228           * @return      none
    229           **************************************************************************************************
    230           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    231          MAC_INTERNAL_API void macLowLevelDiags( uint8 pibAttribute )
   \                     macLowLevelDiags:
    232          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV       A,#-0x4
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   E9           MOV       A,R1
   \   00000B   FE           MOV       R6,A
    233          #if defined ( FEATURE_SYSTEM_STATS )
    234            if ( ( pibAttribute >= MAC_DIAGS_RX_CRC_PASS ) &&
    235                 ( pibAttribute <= MAC_DIAGS_TX_UCAST_FAIL ) )
   \   00000C   7419         MOV       A,#0x19
   \   00000E   29           ADD       A,R1
   \   00000F   C3           CLR       C
   \   000010   9408         SUBB      A,#0x8
   \   000012   5023         JNC       ??macLowLevelDiags_0
    236            {
    237              uint32 value;
    238          
    239              /* Update Diagnostics counter */
    240              MAC_MlmeGetReq( pibAttribute, &value );
   \   000014                ; Setup parameters for call to function MAC_MlmeGetReq
   \   000014   AA..         MOV       R2,?XSP + 0
   \   000016   AB..         MOV       R3,?XSP + 1
   \   000018   12....       LCALL     `??MAC_MlmeGetReq::?relay`; Banked call to: MAC_MlmeGetReq
    241              value++;
   \   00001B   90....       MOV       DPTR,#__Constant_1
   \   00001E   78..         MOV       R0,#?V0
   \   000020   12....       LCALL     ?L_MOV_X
   \   000023   85..82       MOV       DPL,?XSP + 0
   \   000026   85..83       MOV       DPH,?XSP + 1
   \   000029   78..         MOV       R0,#?V0
   \   00002B   12....       LCALL     ?L_ADD_TO_X
    242              MAC_MlmeSetReq( pibAttribute, &value );
   \   00002E                ; Setup parameters for call to function MAC_MlmeSetReq
   \   00002E   AA..         MOV       R2,?XSP + 0
   \   000030   AB..         MOV       R3,?XSP + 1
   \   000032   EE           MOV       A,R6
   \   000033   F9           MOV       R1,A
   \   000034   12....       LCALL     `??MAC_MlmeSetReq::?relay`; Banked call to: MAC_MlmeSetReq
    243            }
    244          #endif
    245          }
   \                     ??macLowLevelDiags_0:
   \   000037   7404         MOV       A,#0x4
   \   000039   12....       LCALL     ?DEALLOC_XSTACK8
   \   00003C   7F04         MOV       R7,#0x4
   \   00003E   02....       LJMP      ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_1:
   \   000000   01000000     DD 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??macLowLevelInit::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macLowLevelInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??macLowLevelReset::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macLowLevelReset

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??macLowLevelResume::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macLowLevelResume

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??macLowLevelYield::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macLowLevelYield

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??macLowLevelDiags::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macLowLevelDiags
    246          
    247          
    248          /**************************************************************************************************
    249          */

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0     16   macLowLevelDiags
        0     16   -> MAC_MlmeGetReq
        0     16   -> MAC_MlmeSetReq
      2      0   macLowLevelInit
        2      0   -> macBackoffTimerInit
        2      0   -> macMcuInit
        2      0   -> macRadioInit
        2      0   -> macRxInit
        2      0   -> macRxOnOffInit
        2      0   -> macTxInit
      2      0   macLowLevelReset
        2      0   -> halAssertHandler
        2      0   -> macBackoffTimerReset
        2      0   -> macRadioReset
        2      0   -> macRxTxReset
        2      0   -> macSleepWakeUp
      2      0   macLowLevelResume
        2      0   -> macRadioInit
      2      0   macLowLevelYield


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       7  ?Subroutine0
       1  _A_IEN0
       4  __Constant_1
      65  macLowLevelDiags
       6  macLowLevelDiags::?relay
      24  macLowLevelInit
       6  macLowLevelInit::?relay
      37  macLowLevelReset
       6  macLowLevelReset::?relay
       7  macLowLevelResume
       6  macLowLevelResume::?relay
      48  macLowLevelYield
       6  macLowLevelYield::?relay

 
 188 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
   1 byte  in segment SFR_AN
   4 bytes in segment XDATA_ROM_C
 
  30 bytes of CODE     memory
   0 bytes of CONST    memory (+ 4 bytes shared)
   0 bytes of DATA     memory (+ 1 byte  shared)
 188 bytes of HUGECODE memory

Errors: none
Warnings: none
