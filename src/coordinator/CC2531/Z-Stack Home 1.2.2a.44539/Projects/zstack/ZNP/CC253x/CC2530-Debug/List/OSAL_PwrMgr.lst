###############################################################################
#
# IAR C/C++ Compiler V10.10.1.4655 for 8051               16/Feb/2018  21:39:26
# Copyright 2004-2017 IAR Systems AB.
# Evaluation license - IAR Embedded Workbench for 8051, Evaluation version 10.10
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Components\osal\common\OSAL_PwrMgr.c
#    Command line       =  
#        -f C:\Users\Oskar\AppData\Local\Temp\EW70B3.tmp ("C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Components\osal\common\OSAL_PwrMgr.c" -D
#        FEATURE_SYSTEM_STATS -D POWER_SAVING -D xTC_LINKKEY_JOIN -lC "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2530-Debug\List" -lA
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2530-Debug\List"
#        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2530-Debug\Obj" -e --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 16 -f "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\Source\znp.cfg"
#        (-DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        "-DZSTACK_DEVICE_BUILD=(DEVICE_BUILD_COORDINATOR | DEVICE_BUILD_ROUTER
#        | DEVICE_BUILD_ENDDEVICE)" -DNWK_AUTO_POLL -DZNP_RUN_WDOG=FALSE
#        -DZNP_UART_BAUD=HAL_UART_BR_115200 -DZIGBEEPRO -DZIGBEE_FRAGMENTATION
#        -DINTER_PAN -DOSAL_CLOCK -DOSAL_SAPI=FALSE -DSAPI_CB_FUNC=FALSE
#        -DHOLD_AUTO_START -DNV_RESTORE -DNV_INIT -DNUM_DISC_ATTEMPTS=0
#        -DMT_UTIL_FUNC -DMT_SYS_FUNC -DMT_AF_FUNC -DMT_SAPI_FUNC
#        -DMT_SAPI_CB_FUNC -DMT_ZDO_CB_FUNC -DMT_ZDO_FUNC -DMT_ZDO_MGMT
#        -DMT_ZDO_EXTENSIONS -DMT_APP_FUNC) -f "C:\Texas Instruments\Z-Stack
#        Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
#        -f "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\SE\Source\" -I "C:\Texas
#        Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\ZMain\TI2530ZNP\" -I
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\hal\target\CC2530ZNP\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\high_level\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\mt\" -I
#        "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\osal\include\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\ecc\binary163\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\ecc\binary283\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\saddr\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\services\sdata\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\af\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\nwk\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sapi\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sec\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\sys\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\zcl\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\stack\zdo\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\zmac\"
#        -I "C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\..\..\..\..\Components\zmac\f8w\"
#        -Ohz --require_prototypes --no_code_motion)
#    Locale             =  German_Germany.1252
#    List file          =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2530-Debug\List\OSAL_PwrMgr.lst
#    Object file        =  
#        C:\Texas Instruments\Z-Stack Home
#        1.2.2a.44539\Projects\zstack\ZNP\CC253x\CC2530-Debug\Obj\OSAL_PwrMgr.r51
#
###############################################################################

C:\Texas Instruments\Z-Stack Home 1.2.2a.44539\Components\osal\common\OSAL_PwrMgr.c
      1          /**************************************************************************************************
      2            Filename:       OSAL_pwrmgr.c
      3            Revised:        $Date: 2014-11-21 16:17:37 -0800 (Fri, 21 Nov 2014) $
      4            Revision:       $Revision: 41218 $
      5          
      6            Description:    This file contains the OSAL Power Management API.
      7          
      8          
      9            Copyright 2004-2014 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41           * INCLUDES
     42           */
     43          
     44          #include "comdef.h"
     45          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1
     46          #include "OSAL.h"
     47          #include "OSAL_Tasks.h"
     48          #include "OSAL_Timers.h"
     49          #include "OSAL_PwrMgr.h"
     50          
     51          #ifdef USE_ICALL
     52          #include <ICall.h>
     53          #endif /* USE_ICALL */
     54          
     55          #ifdef OSAL_PORT2TIRTOS
     56          /* Direct port to TI-RTOS API */
     57          #if defined CC26XX
     58          #include <ti/sysbios/family/arm/cc26xx/Power.h>
     59          #include <ti/sysbios/family/arm/cc26xx/PowerCC2650.h>
     60          #endif /* CC26XX */
     61          #endif /* OSAL_PORT2TIRTOS */
     62          
     63          /*********************************************************************
     64           * MACROS
     65           */
     66          
     67          /*********************************************************************
     68           * CONSTANTS
     69           */
     70          
     71          /*********************************************************************
     72           * TYPEDEFS
     73           */
     74          
     75          /*********************************************************************
     76           * GLOBAL VARIABLES
     77           */
     78          
     79          /* This global variable stores the power management attributes.
     80           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     81          pwrmgr_attribute_t pwrmgr_attribute;
   \                     pwrmgr_attribute:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z
     82          #if defined USE_ICALL || defined OSAL_PORT2TIRTOS
     83          uint8 pwrmgr_initialized = FALSE;
     84          #endif /* defined USE_ICALL || defined OSAL_PORT2TIRTOS */
     85          
     86          /*********************************************************************
     87           * EXTERNAL VARIABLES
     88           */
     89          
     90          /*********************************************************************
     91           * EXTERNAL FUNCTIONS
     92           */
     93          
     94          /*********************************************************************
     95           * LOCAL VARIABLES
     96           */
     97          
     98          /*********************************************************************
     99           * LOCAL FUNCTION PROTOTYPES
    100           */
    101          
    102          /*********************************************************************
    103           * FUNCTIONS
    104           *********************************************************************/
    105          
    106          /*********************************************************************
    107           * @fn      osal_pwrmgr_init
    108           *
    109           * @brief   Initialize the power management system.
    110           *
    111           * @param   none.
    112           *
    113           * @return  none.
    114           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    115          void osal_pwrmgr_init( void )
   \                     osal_pwrmgr_init:
    116          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    117          #if !defined USE_ICALL && !defined OSAL_PORT2TIRTOS
    118            pwrmgr_attribute.pwrmgr_device = PWRMGR_ALWAYS_ON; // Default to no power conservation.
   \   000004   90....       MOV       DPTR,#pwrmgr_attribute + 6
   \   000007   E4           CLR       A
   \   000008   F0           MOVX      @DPTR,A
    119          #endif /* USE_ICALL */
    120            pwrmgr_attribute.pwrmgr_task_state = 0;            // Cleared.  All set to conserve
   \   000009   90....       MOV       DPTR,#pwrmgr_attribute
   \   00000C   F0           MOVX      @DPTR,A
   \   00000D   A3           INC       DPTR
   \   00000E                REQUIRE ?Subroutine0
   \   00000E                ; // Fall through to label ?Subroutine0
    121          #if defined USE_ICALL || defined OSAL_PORT2TIRTOS
    122            pwrmgr_initialized = TRUE;
    123          #endif /* defined USE_ICALL || defined OSAL_PORT2TIRTOS */
    124          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX      @DPTR,A
   \   000001   D083         POP       DPH
   \   000003   D082         POP       DPL
   \   000005   02....       LJMP      ?BRET
    125          
    126          #if !defined USE_ICALL && !defined OSAL_PORT2TIRTOS
    127          /*********************************************************************
    128           * @fn      osal_pwrmgr_device
    129           *
    130           * @brief   Sets the device power characteristic.
    131           *
    132           * @param   pwrmgr_device - type of power devices. With PWRMGR_ALWAYS_ON
    133           *          selection, there is no power savings and the device is most
    134           *          likely on mains power. The PWRMGR_BATTERY selection allows the
    135           *          HAL sleep manager to enter sleep.
    136           *
    137           * @return  none
    138           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    139          void osal_pwrmgr_device( uint8 pwrmgr_device )
   \                     osal_pwrmgr_device:
    140          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    141            pwrmgr_attribute.pwrmgr_device = pwrmgr_device;
   \   000004   E9           MOV       A,R1
   \   000005   90....       MOV       DPTR,#pwrmgr_attribute + 6
   \   000008   80..         SJMP      ?Subroutine0
    142          }
    143          #endif /* !defined USE_ICALL && !defined OSAL_PORT2TIRTOS*/
    144          
    145          /*********************************************************************
    146           * @fn      osal_pwrmgr_task_state
    147           *
    148           * @brief   This function is called by each task to state whether or
    149           *          not this task wants to conserve power.
    150           *
    151           * @param   task_id - calling task ID.
    152           *          state - whether the calling task wants to
    153           *          conserve power or not.
    154           *
    155           * @return  SUCCESS if task complete
    156           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    157          uint8 osal_pwrmgr_task_state( uint8 task_id, uint8 state )
   \                     osal_pwrmgr_task_state:
    158          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FC           MOV       R4,A
    159            halIntState_t intState;
    160          
    161            if ( task_id >= tasksCnt )
   \   000007   90....       MOV       DPTR,#tasksCnt
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   F8           MOV       R0,A
   \   00000C   EC           MOV       A,R4
   \   00000D   C3           CLR       C
   \   00000E   98           SUBB      A,R0
   \   00000F   4004         JC        ??osal_pwrmgr_task_state_0
    162              return ( INVALID_TASK );
   \   000011   7903         MOV       R1,#0x3
   \   000013   8042         SJMP      ??osal_pwrmgr_task_state_1
    163          
    164          #if defined USE_ICALL || defined OSAL_PORT2TIRTOS
    165            if ( !pwrmgr_initialized )
    166            {
    167              /* If voting is made before this module is initialized,
    168               * pwrmgr_task_state will reset later when the module is
    169               * initialized, and cause incorrect activity count.
    170               */
    171              return ( SUCCESS );
    172            }
    173          #endif /* defined USE_ICALL || defined OSAL_PORT2TIRTOS */
    174          
    175            HAL_ENTER_CRITICAL_SECTION( intState );
   \                     ??osal_pwrmgr_task_state_0:
   \   000015   A2AF         MOV       C,0xa8.7
   \   000017   E4           CLR       A
   \   000018   33           RLC       A
   \   000019   FB           MOV       R3,A
   \   00001A   C2AF         CLR       0xa8.7
    176          
    177            if ( state == PWRMGR_CONSERVE )
   \   00001C   EA           MOV       A,R2
   \   00001D   75..01       MOV       ?V0,#0x1
   \   000020   75..00       MOV       ?V1,#0x0
   \   000023   7019         JNZ       ??osal_pwrmgr_task_state_2
    178            {
    179          #if defined USE_ICALL || defined OSAL_PORT2TIRTOS
    180              uint16 cache = pwrmgr_attribute.pwrmgr_task_state;
    181          #endif /* defined USE_ICALL || defined OSAL_PORT2TIRTOS */
    182              // Clear the task state flag
    183              pwrmgr_attribute.pwrmgr_task_state &= ~(1 << task_id );
   \   000025   EC           MOV       A,R4
   \   000026   78..         MOV       R0,#?V0
   \   000028   12....       LCALL     ?S_SHL
   \   00002B   E5..         MOV       A,?V0
   \   00002D   F4           CPL       A
   \   00002E   F8           MOV       R0,A
   \   00002F   E5..         MOV       A,?V1
   \   000031   F4           CPL       A
   \   000032   F9           MOV       R1,A
   \   000033   90....       MOV       DPTR,#pwrmgr_attribute
   \   000036   E0           MOVX      A,@DPTR
   \   000037   58           ANL       A,R0
   \   000038   F0           MOVX      @DPTR,A
   \   000039   A3           INC       DPTR
   \   00003A   E0           MOVX      A,@DPTR
   \   00003B   59           ANL       A,R1
   \   00003C   8011         SJMP      ??osal_pwrmgr_task_state_3
    184          #if defined USE_ICALL || defined OSAL_PORT2TIRTOS
    185              if (cache != 0 && pwrmgr_attribute.pwrmgr_task_state == 0)
    186              {
    187          #ifdef USE_ICALL
    188                /* Decrement activity counter */
    189                ICall_pwrUpdActivityCounter(FALSE);
    190          #else /* USE_ICALL */
    191                Power_releaseConstraint(Power_SD_DISALLOW);
    192                Power_releaseConstraint(Power_SB_DISALLOW);
    193          #endif /* USE_ICALL */
    194              }
    195          #endif /* defined USE_ICALL || defined OSAL_PORT2TIRTOS */
    196            }
    197            else
    198            {
    199          #if defined USE_ICALL || defined OSAL_PORT2TIRTOS
    200              if (pwrmgr_attribute.pwrmgr_task_state == 0)
    201              {
    202          #ifdef USE_ICALL
    203                /* Increment activity counter */
    204                ICall_pwrUpdActivityCounter(TRUE);
    205          #else /* USE_ICALL */
    206                Power_setConstraint(Power_SD_DISALLOW);
    207                Power_setConstraint(Power_SB_DISALLOW);
    208          #endif /* USE_ICALL */
    209              }
    210          #endif /* defined USE_ICALL || defined OSAL_PORT2TIRTOS */
    211              // Set the task state flag
    212              pwrmgr_attribute.pwrmgr_task_state |= (1 << task_id);
   \                     ??osal_pwrmgr_task_state_2:
   \   00003E   EC           MOV       A,R4
   \   00003F   78..         MOV       R0,#?V0
   \   000041   12....       LCALL     ?S_SHL
   \   000044   90....       MOV       DPTR,#pwrmgr_attribute
   \   000047   E0           MOVX      A,@DPTR
   \   000048   45..         ORL       A,?V0
   \   00004A   F0           MOVX      @DPTR,A
   \   00004B   A3           INC       DPTR
   \   00004C   E0           MOVX      A,@DPTR
   \   00004D   45..         ORL       A,?V1
   \                     ??osal_pwrmgr_task_state_3:
   \   00004F   F0           MOVX      @DPTR,A
    213            }
    214          
    215            HAL_EXIT_CRITICAL_SECTION( intState );
   \   000050   EB           MOV       A,R3
   \   000051   A2E0         MOV       C,0xE0 /* A   */.0
   \   000053   92AF         MOV       0xa8.7,C
    216          
    217            return ( SUCCESS );
   \   000055   7900         MOV       R1,#0x0
   \                     ??osal_pwrmgr_task_state_1:
   \   000057   7F02         MOV       R7,#0x2
   \   000059   02....       LJMP      ?BANKED_LEAVE_XDATA
   \   00005C                REQUIRE _A_IEN0
    218          }
    219          
    220          #if defined( POWER_SAVING ) && !(defined USE_ICALL || defined OSAL_PORT2TIRTOS)
    221          /*********************************************************************
    222           * @fn      osal_pwrmgr_powerconserve
    223           *
    224           * @brief   This function is called from the main OSAL loop when there are
    225           *          no events scheduled and shouldn't be called from anywhere else.
    226           *
    227           * @param   none.
    228           *
    229           * @return  none.
    230           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    231          void osal_pwrmgr_powerconserve( void )
   \                     osal_pwrmgr_powerconserve:
    232          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    233            uint32        next;
    234            halIntState_t intState;
    235          
    236            // Should we even look into power conservation
    237            if ( pwrmgr_attribute.pwrmgr_device != PWRMGR_ALWAYS_ON )
   \   000005   90....       MOV       DPTR,#pwrmgr_attribute + 6
   \   000008   E0           MOVX      A,@DPTR
   \   000009   601B         JZ        ??osal_pwrmgr_powerconserve_0
    238            {
    239              // Are all tasks in agreement to conserve
    240              if ( pwrmgr_attribute.pwrmgr_task_state == 0 )
   \   00000B   90....       MOV       DPTR,#pwrmgr_attribute
   \   00000E   E0           MOVX      A,@DPTR
   \   00000F   F8           MOV       R0,A
   \   000010   A3           INC       DPTR
   \   000011   E0           MOVX      A,@DPTR
   \   000012   F9           MOV       R1,A
   \   000013   E8           MOV       A,R0
   \   000014   49           ORL       A,R1
   \   000015   700F         JNZ       ??osal_pwrmgr_powerconserve_0
    241              {
    242                // Hold off interrupts.
    243                HAL_ENTER_CRITICAL_SECTION( intState );
   \   000017   AEA8         MOV       R6,0xa8+0x0
   \   000019   C2AF         CLR       0xa8.7
    244          
    245                // Get next time-out
    246                next = osal_next_timeout();
   \   00001B                ; Setup parameters for call to function osal_next_timeout
   \   00001B   12....       LCALL     `??osal_next_timeout::?relay`; Banked call to: osal_next_timeout
    247          
    248                // Re-enable interrupts.
    249                HAL_EXIT_CRITICAL_SECTION( intState );
   \   00001E   EE           MOV       A,R6
   \   00001F   A2E7         MOV       C,0xE0 /* A   */.7
   \   000021   92AF         MOV       0xa8.7,C
    250          
    251                // Put the processor into sleep mode
    252                OSAL_SET_CPU_INTO_SLEEP( next );
   \   000023                ; Setup parameters for call to function halSleep
   \   000023   12....       LCALL     `??halSleep::?relay`; Banked call to: halSleep
    253              }
    254            }
    255          }
   \                     ??osal_pwrmgr_powerconserve_0:
   \   000026   7F04         MOV       R7,#0x4
   \   000028   02....       LJMP      ?BANKED_LEAVE_XDATA
   \   00002B                REQUIRE _A_IEN0

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??osal_pwrmgr_init::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osal_pwrmgr_init

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??osal_pwrmgr_device::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osal_pwrmgr_device

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??osal_pwrmgr_task_state::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osal_pwrmgr_task_state

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??osal_pwrmgr_powerconserve::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osal_pwrmgr_powerconserve
    256          #endif /* POWER_SAVING */
    257          
    258          /*********************************************************************
    259          *********************************************************************/

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      2      0   osal_pwrmgr_device
      2      0   osal_pwrmgr_init
      0     12   osal_pwrmgr_powerconserve
        0     12   -> halSleep
        0     12   -> osal_next_timeout
      0     10   osal_pwrmgr_task_state


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?Subroutine0
       1  _A_IEN0
      10  osal_pwrmgr_device
       6  osal_pwrmgr_device::?relay
      14  osal_pwrmgr_init
       6  osal_pwrmgr_init::?relay
      43  osal_pwrmgr_powerconserve
       6  osal_pwrmgr_powerconserve::?relay
      92  osal_pwrmgr_task_state
       6  osal_pwrmgr_task_state::?relay
       7  pwrmgr_attribute

 
 167 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment SFR_AN
   7 bytes in segment XDATA_Z
 
  24 bytes of CODE     memory
   0 bytes of DATA     memory (+ 1 byte shared)
 167 bytes of HUGECODE memory
   7 bytes of XDATA    memory

Errors: none
Warnings: none
